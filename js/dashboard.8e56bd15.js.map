{"version":3,"sources":["webpack:///./node_modules/core-js/internals/string-repeat.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/core-js/internals/this-number-value.js","webpack:///./node_modules/core-js/modules/es.array.for-each.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/firebase/database/dist/index.esm.js","webpack:///./src/views/Dashboard.vue?a38e","webpack:///src/views/Dashboard.vue","webpack:///./src/views/Dashboard.vue?2310","webpack:///./src/views/Dashboard.vue","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./node_modules/core-js/modules/es.number.to-fixed.js","webpack:///./src/views/Dashboard.vue?7a36","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/core-js/internals/dom-iterables.js"],"names":["toInteger","requireObjectCoercible","module","exports","repeat","count","str","String","this","result","n","Infinity","RangeError","global","DOMIterables","forEach","createNonEnumerableProperty","COLLECTION_NAME","Collection","CollectionPrototype","prototype","error","$forEach","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","callbackfn","arguments","length","undefined","fails","wellKnownSymbol","V8_VERSION","SPECIES","METHOD_NAME","array","constructor","foo","Boolean","_interopDefault","ex","Object","defineProperty","value","firebase","tslib","util","logger$1","component","DOMStorageWrapper","domStorage_","prefix_","set","key","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spread","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","isNodeSdk","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","ebits","fbits","bias","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","path","toUpperCase","INTEGER_REGEXP_","RegExp","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","decodePath","pathStringDecoded","piece","decodeURIComponent","replace","decodeQuery","queryString","e_1","_a","results","charAt","_b","__values","_c","next","done","segment","kv","e_1_1","return","call","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","queryParams","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","setMaxNode","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","setNodeFromJSON","setMaxNode$1","_defaultIndexMap","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON$1","json","jsonLeaf","node_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj","childSet","sortedChildSet","__referenceConstructor","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","thisCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","startName","getIndexStartName","endName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","validateContextObject","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","generateWithValues","values","Date","getTime","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","existing","unused","delta","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","safeToRemove","delete","forEachTree","prefixPath","func","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","subtree","Empty","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","generateEventsForChanges_","getInitialEvents","initialChanges","eventNode","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","__read","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","newWriteTree","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","write","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","needToReevaluate","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","defaultTag","stopListening","queryToRemove","tagToRemove","removeTags_","includeHiddenSets","maybeChildSyncPoint","childMap","completeView","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","CONSTANTS","NODE_ADMIN","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","p","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","_e","_f","clientName","NODE_CLIENT","isReactNative","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","status_1","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","INTERRUPT_REASON","Repo","forceRestClient","app","authTokenProvider","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authOverride","appId","addTokenChangeListener","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","remainsInWindow","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","Promise","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","currentNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","allRun","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","DATABASE_URL_OPTION","FIREBASE_DATABASE_EMULATOR_HOST_VAR","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","authProvider","isEmulator","dbEmulatorHost","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","__awaiter","__generator","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","freeze","__proto__","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","TEST_ACCESS","registerDatabase","instance","registerComponent","Component","getProvider","setServiceProps","setMultipleInstances","registerVersion","classof","TypeError","$","target","proto","forced","nextTick","arch","execPath","title","pid","browser","argv","binding","cwd","chdir","dir","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","render","_vm","_h","$createElement","_self","staticClass","firstlineAssets","_v","_s","totalPoolReward","_m","_l","period","toDate","rewardforPool","cleanReward","el","alias","adress","class","checkThePayment","attrs","$event","changeThePayment","rewardforPeriod","rewardedPerAsset","staticRenderFns","firebaseConfig","periods","methods","end","checked","tempCheckedEl","tempPeriodReward","tempRewPeriod","rewardAmount","tempChangeEl","paid","poolClients","tempSnap","keyAdress","computed","totalAm","toFixed","poolReward","created","$store","getters","getfirebaseConfig","tempSnapAssetboxesData","tempClientsList","poolPeriods","tempPeriodsforRendiring","element","rewardData","totalReward","tempReward","$find","addToUnscopables","FIND","SKIPS_HOLES","toPrimitive","definePropertyModule","createPropertyDescriptor","object","propertyKey","isObject","toObject","toLength","createProperty","arraySpeciesCreate","arrayMethodHasSpeciesSupport","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","FORCED","E","A","nativeKeys","FAILS_ON_PRIMITIVES","it","thisNumberValue","nativeToFixed","x","acc","x2","fractionDigits","z","number","fractDigits","sign","multiply","c2","divide","dataToString","normalizeArray","parts","allowAboveRoot","up","unshift","basename","matchedSlash","charCodeAt","xs","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSlash","paths","relative","trim","arr","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","hasRoot","ext","extname","startDot","startPart","preDotState","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList"],"mappings":"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","file":"js/dashboard.8e56bd15.js","sourcesContent":["'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\nmodule.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nvar component = require('@firebase/component');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger$1.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += util.stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger$1.LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n */\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return util.stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length) {\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        }\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0) {\r\n                    pieces.push(childPieces[i]);\r\n                }\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0) {\r\n                return cmp;\r\n            }\r\n        }\r\n        if (leftKeys.length === rightKeys.length) {\r\n            return 0;\r\n        }\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length === 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return (this.host !== this.internalHost ||\r\n            this.isCustomHost() ||\r\n            this.includeNamespaceInQueryParams);\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        each(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = tslib.__values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = tslib.__assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = tslib.__assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (util.contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this.node_.isEmpty();\r\n        }\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ change.childName);\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherKeys = Object.keys(other.callbacks_);\r\n                var thisKeys = Object.keys(this.callbacks_);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks_[eventType] === _this.callbacks_[eventType];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName !== MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName !== MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param failureCallbackOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel) {\r\n                ret.cancel.bind(ret.context)(err);\r\n            }\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = this.path_.child(childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return this.syncTree_.calcCompleteEventCache(this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        util.assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            util.assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        util.assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        util.assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    util.assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        this.value = null;\r\n        this.children = new Map();\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value != null) {\r\n            return this.value.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children.size > 0) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children.has(childKey)) {\r\n                var childTree = this.children.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value = data;\r\n            this.children.clear();\r\n        }\r\n        else if (this.value !== null) {\r\n            this.value = this.value.updateChild(path, data);\r\n        }\r\n        else {\r\n            var childKey = path.getFront();\r\n            if (!this.children.has(childKey)) {\r\n                this.children.set(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value = null;\r\n            this.children.clear();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value !== null) {\r\n                if (this.value.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value;\r\n                    this.value = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children.size > 0) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children.has(childKey)) {\r\n                    var safeToRemove = this.children.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children.delete(childKey);\r\n                    }\r\n                }\r\n                return this.children.size === 0;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value !== null) {\r\n            func(prefixPath, this.value);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        this.children.forEach(function (tree, key) {\r\n            func(key, tree);\r\n        });\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        util.assert(type === Change.CHILD_ADDED ||\r\n            type === Change.CHILD_CHANGED ||\r\n            type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\n// eslint-disable-next-line @typescript-eslint/class-name-casing\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap.getNode().equals(/** @type {!Node} */ oldCompleteSnap)) ||\r\n                !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey === '.priority') {\r\n                    util.assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey === '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache.getServerCache().getNode().isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return this.views.size === 0;\r\n    };\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var e_1, _a;\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = this.views.get(queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events = [];\r\n            try {\r\n                for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var view = _c.value;\r\n                    events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = this.views.get(queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ eventCache, eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ serverCache, serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views.set(queryId, view);\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var e_2, _a;\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            try {\r\n                // When you do ref.off(...), we search all views for the registration to remove.\r\n                for (var _b = tslib.__values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var _d = tslib.__read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                    cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                    if (view.isEmpty()) {\r\n                        this.views.delete(viewQueryId);\r\n                        // We'll deal with complete views later.\r\n                        if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                            removed.push(view.getQuery());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = this.views.get(queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    this.views.delete(queryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var e_3, _a;\r\n        var result = [];\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                    result.push(view);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var e_4, _a;\r\n        var serverCache = null;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                serverCache = serverCache || view.getCompleteServerCache(path);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return serverCache;\r\n    };\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return this.views.get(queryId);\r\n        }\r\n    };\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (view.getQuery().getQueryParams().loadsAllData()) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        each(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param path The path to check for\r\n     * @return Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param path The path to get a complete write\r\n     * @return The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param node The node to apply this CompoundWrite to\r\n     * @return The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return applySubtreeWrite(Path.Empty, this.writeTree_, node);\r\n    };\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    return CompoundWrite;\r\n}());\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                each(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            for (var childName in writeRecord.children) {\r\n                if (writeRecord.children.hasOwnProperty(childName) &&\r\n                    writeRecord.path.child(childName).contains(path)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                each(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap.set(queryKey, tag);\r\n            this.tagToQueryMap.set(tag, queryKey);\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n     * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n     * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n     *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                each(childMap, function (_key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\r\n                this.queryToTagMap.delete(removedQueryKey);\r\n                this.tagToQueryMap.delete(removedQueryTag);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    each(childMap, function (_key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap.get(tag);\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return this.queryToTagMap.get(queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = tslib.__assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} varArgs\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = tslib.__spread(this.listeners_[eventType]);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (util.isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = tslib.__values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param applicationId_ The Firebase App ID for this project\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        /** Map<path, Map<queryId, ListenSpec>> */\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = tslib.__values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient, app, authTokenProvider) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactionsInit_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    // TODO: This should be @private but it's used by test_access.js and internal.js\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (key, value) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var existing = this.serverSyncTree_.calcCompleteEventCache(path);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        each(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            each(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = new SparseSnapshotTree();\r\n        this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\r\n            var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\r\n            resolvedOnDisconnectTree.remember(path, resolved);\r\n        });\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                each(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_) {\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            }\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        each(stats, function (stat, value) {\r\n            var paddedStat = stat;\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++) {\r\n                paddedStat += ' ';\r\n            }\r\n            console.log(paddedStat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    Repo.prototype.log_ = function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status === 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason) {\r\n                        message += ': ' + errorReason;\r\n                    }\r\n                    var error = new Error(message);\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty()) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.path.getBack();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null) {\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            }\r\n            else {\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n            }\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        if (applyLocally === undefined) {\r\n            applyLocally = true;\r\n        }\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next = path.getFront();\r\n        while (next !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n            next = path.getFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        each(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst) {\r\n            action(this);\r\n        }\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst) {\r\n            action(this);\r\n        }\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null) {\r\n                action(child);\r\n            }\r\n            else {\r\n                child.forEachImmediateDescendantWithValue(action);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null) {\r\n            this.parent_.updateChild_(this.name_, this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.transactionsInit_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    }\r\n                    else {\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    front = path.getFront();\r\n    while (front !== null && transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n        front = path.getFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(app_, authProvider_) {\r\n        var _this = this;\r\n        this.app_ = app_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\r\nvar EmulatorAdminTokenProvider = /** @class */ (function () {\r\n    function EmulatorAdminTokenProvider() {\r\n    }\r\n    EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\r\n        });\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\r\n    return EmulatorAdminTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].interrupt();\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        var e_3, _a, e_4, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_4 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].resume();\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, authProvider, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        var isEmulator;\r\n        var dbEmulatorHost = undefined;\r\n        if (typeof process !== 'undefined') {\r\n            dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n        }\r\n        if (dbEmulatorHost) {\r\n            isEmulator = true;\r\n            dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n            parsedUrl = parseRepoInfo(dbUrl);\r\n            repoInfo = parsedUrl.repoInfo;\r\n        }\r\n        else {\r\n            isEmulator = !parsedUrl.repoInfo.secure;\r\n        }\r\n        var authTokenProvider = util.CONSTANTS.NODE_ADMIN && isEmulator\r\n            ? new EmulatorAdminTokenProvider()\r\n            : new FirebaseAuthTokenProvider(app, authProvider);\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app, authTokenProvider);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        },\r\n        increment: function (delta) {\r\n            return {\r\n                '.sv': {\r\n                    'increment': delta\r\n                }\r\n            };\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            return tslib.__generator(this, function (_a) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.checkDeleted_('delete');\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.repo_ = null;\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\nvar name = \"@firebase/database\";\nvar version = \"0.6.11\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new component.Component('database', function (container, url) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;\n//# sourceMappingURL=index.cjs.js.map\n","var classof = require('../internals/classof-raw');\n\n// `thisNumberValue` abstract operation\n// https://tc39.github.io/ecma262/#sec-thisnumbervalue\nmodule.exports = function (value) {\n  if (typeof value != 'number' && classof(value) != 'Number') {\n    throw TypeError('Incorrect invocation');\n  }\n  return +value;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n","exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","import '@firebase/database';\n//# sourceMappingURL=index.esm.js.map\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dashboard\"},[(_vm.firstlineAssets !== null)?_c('div',[_c('div',{staticClass:\"assets__totalpaid\"},[_vm._v(\"Общая сумма вознаграждений по всем Ассетбоксам = \"+_vm._s(_vm.totalPoolReward))]),_c('div',{staticClass:\"table\"},[_c('div',{staticClass:\"row table__periods table__header--position\"},[_vm._m(0),_c('div',{staticClass:\"period__wrapper\"},_vm._l((_vm.periods),function(period,index){return _c('div',{key:index,staticClass:\"asset__periods coll-reward\"},[_c('div',[_vm._v(_vm._s(_vm.toDate(period)))])])}),0),_vm._m(1)]),_c('div',{staticClass:\"row table__periods table__subheader--position\"},[_vm._m(2),_c('div',{staticClass:\"period__wrapper\"},_vm._l((_vm.periods),function(period,index){return _c('div',{key:index,staticClass:\"asset__amount\"},[_c('div',{staticClass:\"coll-reward\"},[_vm._v(_vm._s(_vm.rewardforPool(period)))])])}),0),_c('div',{staticClass:\"asset__amount\"},[_c('div',{staticClass:\"coll-reward\"},[_vm._v(_vm._s(_vm.cleanReward))])])]),_c('div',{staticClass:\"breakpoint\"}),_vm._l((_vm.firstlineAssets),function(el,index){return _c('div',{key:index,staticClass:\"row table__assets\"},[_c('div',{staticClass:\"asset__adress assets__header\"},[_c('div',{staticClass:\"assetbox__adress--alias\"},[_vm._v(_vm._s(el.alias))]),_c('div',{staticClass:\"assetbox__adress--title\"},[_vm._v(_vm._s(el.adress))]),_c('div',{staticClass:\"asset__result\"},[_vm._l((_vm.periods),function(period,index){return _c('div',{key:index,staticClass:\"asset__amount\",class:_vm.checkThePayment(el.adress,period),attrs:{\"div\":\"\"},on:{\"click\":function($event){return _vm.changeThePayment(el.adress, period)}}},[_c('div',{staticClass:\"coll-reward\"},[_vm._v(_vm._s(_vm.rewardforPeriod(el.adress, period)))])])}),_c('div',{staticClass:\"asset__amount\",attrs:{\"div\":\"\"}},[_c('div',{staticClass:\"coll-reward\"},[_vm._v(_vm._s(_vm.rewardedPerAsset(el.adress)))])])],2)])])})],2)]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"asset__periods assets__header\"},[_c('div',{staticClass:\"assetbox__adress--alias\"},[_vm._v(\"Алиас\")]),_c('div',{staticClass:\"assetbox__adress--title\"},[_vm._v(\"Ассетбоксы\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"asset__periods--fullperiod coll-reward\"},[_c('div',{staticClass:\"assetbox__title--fullperiod\"},[_vm._v(\"Все периоды\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"asset__periods assets__header\"},[_c('div',{staticClass:\"assetbox__adress--alias\"}),_c('div',{staticClass:\"assetbox__adress--title\"},[_vm._v(\"Пул (Bitbon.Today)\")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"dashboard\">\n    <div v-if=\"firstlineAssets !== null\">\n      <div\n        class=\"assets__totalpaid\"\n      >Общая сумма вознаграждений по всем Ассетбоксам = {{totalPoolReward}}</div>\n      <div class=\"table\">\n        <div class=\"row table__periods table__header--position\">\n          <div class=\"asset__periods assets__header\">\n            <div class=\"assetbox__adress--alias\">Алиас</div>\n            <div class=\"assetbox__adress--title\">Ассетбоксы</div>\n          </div>\n          <div class=\"period__wrapper\">\n            <div class=\"asset__periods coll-reward\" v-for=\"(period, index) in periods\" :key=\"index\">\n              <div>{{ toDate(period)}}</div>\n            </div>\n          </div>\n          <div class=\"asset__periods--fullperiod coll-reward\">\n            <div class=\"assetbox__title--fullperiod\">Все периоды</div>\n          </div>\n        </div>\n\n        <div class=\"row table__periods table__subheader--position\">\n          <div class=\"asset__periods assets__header\">\n            <div class=\"assetbox__adress--alias\"></div>\n            <div class=\"assetbox__adress--title\">Пул (Bitbon.Today)</div>\n          </div>\n          <div class=\"period__wrapper\">\n            <div class=\"asset__amount\" v-for=\"(period, index) in periods\" :key=\"index\">\n              <div class=\"coll-reward\">{{ rewardforPool(period) }}</div>\n            </div>\n          </div>\n\n          <div class=\"asset__amount\">\n            <div class=\"coll-reward\">{{ cleanReward }}</div>\n          </div>\n        </div>\n        <div class=\"breakpoint\"></div>\n        <div class=\"row table__assets\" v-for=\"(el,index) in firstlineAssets\" :key=\"index\">\n          <div class=\"asset__adress assets__header\">\n            <div class=\"assetbox__adress--alias\">{{el.alias}}</div>\n            <div class=\"assetbox__adress--title\">{{el.adress}}</div>\n            <div class=\"asset__result\">\n              <div\n                div\n                class=\"asset__amount\"\n                v-for=\"(period, index) in periods\"\n                :key=\"index\"\n                :class=\"checkThePayment(el.adress,period)\"\n                @click=\"changeThePayment(el.adress, period)\"\n              >\n                <div class=\"coll-reward\">{{ rewardforPeriod(el.adress, period) }}</div>\n              </div>\n              <div div class=\"asset__amount\">\n                <div class=\"coll-reward\">{{ rewardedPerAsset(el.adress) }}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as firebase from \"firebase/app\";\nrequire(\"firebase/database\");\n\nexport default {\n  data: function () {\n    return {\n      firebaseConfig: \"\",\n      firstlineAssets: null,\n      snapshot: null,\n      periods: [],\n      time: 0,\n    };\n  },\n  methods: {\n    toDate(el) {\n      let startDate = new Date(el.start);\n      let startMonth = startDate.getMonth();\n      let start =\n        startDate.getDate() +\n        \".\" +\n        (startMonth < 10 ? \"0\" : \"\") +\n        startMonth +\n        \".\" +\n        startDate.getFullYear();\n\n      let endDate = new Date(el.end);\n      let endMonth = endDate.getMonth();\n      let end =\n        endDate.getDate() +\n        \".\" +\n        (endMonth < 10 ? \"0\" : \"\") +\n        endMonth +\n        \".\" +\n        endDate.getFullYear();\n\n      let result = `${start} - ${end}`;\n      return result;\n    },\n    rewardforPeriod(asset, period) {\n      let checked = this.snapshot.find((el) => el.adress == asset);\n      if (this.time > period.end) {\n        if (checked !== undefined) {\n          if (\n            checked.rewardedPeriod !== undefined &&\n            checked.rewardedPeriod !== 0\n          ) {\n            for (\n              let i = 0;\n              i <= Object.keys(checked.rewardedPeriod).length - 1;\n              i++\n            ) {\n              let checkedEl =\n                checked.rewardedPeriod[Object.keys(checked.rewardedPeriod)[i]];\n\n              if (\n                checkedEl.start === period.start &&\n                checkedEl.end === period.end\n              ) {\n                return `${checkedEl.rewardAmount}`;\n              } else if (i == Object.keys(checked.rewardedPeriod).length - 1) {\n                return 0;\n              }\n            }\n          } else {\n            return 0;\n          }\n        } else {\n          return 0;\n        }\n      } else {\n        return \"-\";\n      }\n    },\n    rewardedPerAsset(el) {\n      let tempCheckedEl = this.snapshot.find((element) => element.adress == el);\n      if (tempCheckedEl !== undefined) {\n        let result = 0;\n        for (\n          let i = 0;\n          i < Object.keys(tempCheckedEl.rewardedPeriod).length;\n          i++\n        ) {\n          result =\n            result +\n            tempCheckedEl.rewardedPeriod[\n              Object.keys(tempCheckedEl.rewardedPeriod)[i]\n            ].rewardAmount;\n        }\n        return result;\n      }\n    },\n    rewardforPool(period) {\n      let tempPeriodReward = period.poolReward;\n      if (\n        tempPeriodReward !== 0 &&\n        tempPeriodReward !== undefined &&\n        tempPeriodReward > 0\n      ) {\n        this.snapshot.forEach((el) => {\n          for (let i = 0; i < Object.keys(el.rewardedPeriod).length; i++) {\n            let tempRewPeriod =\n              el.rewardedPeriod[Object.keys(el.rewardedPeriod)[i]];\n            if (\n              tempRewPeriod.start === period.start &&\n              tempRewPeriod.end === period.end\n            ) {\n              tempPeriodReward = tempPeriodReward - tempRewPeriod.rewardAmount;\n            }\n          }\n        });\n\n        return tempPeriodReward;\n      } else if (tempPeriodReward !== undefined && this.time >= period.end) {\n        return tempPeriodReward;\n      } else {\n        return \"-\";\n      }\n    },\n    changeThePayment(el, period) {\n      let checked = this.snapshot.find((element) => element.adress == el);\n\n      if (checked !== undefined) {\n        for (let i = 0; i < Object.keys(checked.rewardedPeriod).length; i++) {\n          let tempChangeEl =\n            checked.rewardedPeriod[Object.keys(checked.rewardedPeriod)[i]];\n\n          if (\n            tempChangeEl.start === period.start &&\n            tempChangeEl.end === period.end\n          ) {\n            tempChangeEl.paid = !tempChangeEl.paid;\n\n            if (!firebase.apps.length) {\n              this.firebaseConfig = this.$store.getters.getfirebaseConfig;\n              firebase.initializeApp(this.firebaseConfig);\n            }\n\n            let database = firebase.database();\n            let poolClients = database.ref(\"/firstline\");\n\n            poolClients.once(\"value\").then((snapshot) => {\n              let tempSnap = snapshot.val();\n              let tempData = [];\n              let keyAdress = null;\n\n              if (tempSnap !== 0) {\n                for (let i = 0; i < Object.keys(tempSnap).length; i++) {\n                  if (tempSnap[Object.keys(tempSnap)[i]].adress === el) {\n                    keyAdress = Object.keys(tempSnap)[i];\n                    let checkedAssetforCommit =\n                      tempSnap[Object.keys(tempSnap)[i]];\n                    for (\n                      let i = 0;\n                      i <\n                      Object.keys(checkedAssetforCommit.rewardedPeriod).length;\n                      i++\n                    ) {\n                      let tempRewPer =\n                        checkedAssetforCommit.rewardedPeriod[\n                          Object.keys(checkedAssetforCommit.rewardedPeriod)[i]\n                        ];\n                      if (\n                        tempRewPer.start === period.start &&\n                        tempRewPer.end === period.end\n                      ) {\n                        let keyPeriod = Object.keys(\n                          checkedAssetforCommit.rewardedPeriod\n                        )[i];\n                        if (\n                          keyAdress !== null &&\n                          keyAdress !== undefined &&\n                          keyPeriod !== undefined\n                        ) {\n                          poolClients\n                            .child(`/${keyAdress}`)\n                            .child(\"/rewardedPeriod\")\n                            .child(`/${keyPeriod}`)\n                            .update({ paid: tempChangeEl.paid });\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            });\n          }\n        }\n      }\n    },\n    checkThePayment(el, period) {\n      let checked = this.snapshot.find((element) => element.adress == el);\n      if (checked !== undefined) {\n        for (let i = 0; i < Object.keys(checked.rewardedPeriod).length; i++) {\n          let tempChangeEl =\n            checked.rewardedPeriod[Object.keys(checked.rewardedPeriod)[i]];\n          if (\n            tempChangeEl.start === period.start &&\n            tempChangeEl.end === period.end\n          ) {\n            if (tempChangeEl.paid === false) {\n              return \"period__nonpaid\";\n            } else if (tempChangeEl.paid === true) {\n              return \"period__paid\";\n            }\n          }\n        }\n      }\n    },\n  },\n  computed: {\n    totalPoolReward() {\n      let totalAm = 0;\n\n      this.snapshot.forEach((el) => {\n        if (el.totalPoolReward !== 0) {\n          for (let i = 0; i < Object.keys(el.rewardedPeriod).length; i++) {\n            totalAm =\n              totalAm +\n              el.rewardedPeriod[Object.keys(el.rewardedPeriod)[i]].rewardAmount;\n          }\n        }\n      });\n\n      return totalAm.toFixed(8);\n    },\n    cleanReward() {\n      let result = 0;\n      this.periods.forEach((el) => {\n        el.poolReward !== undefined && el.poolReward >= 0\n          ? (result = result + el.poolReward)\n          : null;\n      });\n      return (result - this.totalPoolReward).toFixed(8);\n    },\n  },\n  created() {\n    if (!firebase.apps.length) {\n      this.firebaseConfig = this.$store.getters.getfirebaseConfig;\n      firebase.initializeApp(this.firebaseConfig);\n    }\n\n    let database = firebase.database();\n    let poolClients = database.ref(\"/firstline\");\n    let poolPeriods = database.ref(\"/periods\");\n\n    poolClients.once(\"value\").then((snapshot) => {\n      let tempSnap = snapshot.val();\n      let tempSnapAssetboxesData = [];\n      let tempClientsList = [];\n\n      if (tempSnap !== 0) {\n        for (let i = 0; i < Object.keys(tempSnap).length; i++) {\n          tempSnapAssetboxesData.push(tempSnap[Object.keys(tempSnap)[i]]);\n        }\n        tempSnapAssetboxesData.forEach((el) => {\n          tempClientsList.push({ adress: el.adress, alias: el.alias });\n        });\n      }\n\n      this.firstlineAssets = tempClientsList;\n      this.snapshot = tempSnapAssetboxesData;\n\n      poolPeriods.once(\"value\").then((snap) => {\n        let tempPeriodsforRendiring = [];\n        let tempSnap = snap.val();\n\n        if (tempSnap !== 0) {\n          for (let i = 0; i < Object.keys(tempSnap).length; i++) {\n            tempPeriodsforRendiring.push(tempSnap[Object.keys(tempSnap)[i]]);\n          }\n        }\n\n        tempPeriodsforRendiring.forEach((element) => {\n          let tempReward = 0;\n          if (element.rewardData !== 0 && element.rewardData !== undefined) {\n            element.rewardData.totalReward !== undefined\n              ? (tempReward = element.rewardData.totalReward)\n              : null;\n          }\n\n          this.periods.push({\n            start: element.start,\n            end: element.end,\n            poolReward: tempReward,\n          });\n        });\n      });\n\n      this.time = new Date().getTime();\n\n      /*\n      tempData.forEach(el => {    \n        if(tempClientsList.length > 0){\n         let tempCheked = tempClientsList.find(element => element == el.adress);\n  \n         tempCheked == undefined ? newClient.push(el.adress) : null;\n        } else {\n          newClient.push(el.adress);\n        }\n      })*/\n    });\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.table__assets .asset__result:not(:first-child) {\n  margin-top: -2px;\n}\n\n.asset__result .asset__amount:not(:first-child) {\n  margin-left: -2px;\n}\n\n.table__subheader--position .asset__amount:not(:first-child) {\n  margin-left: -2px;\n}\n\n.table__header--position .period__wrapper .coll-reward:not(:first-child),\n.asset__periods--fullperiod {\n  margin-left: -2px;\n}\n\n.assetbox__adress--alias {\n  min-width: 150px;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin-right: 20px;\n  text-align: start;\n}\n.asset__result:hover {\n  outline: 3px solid yellow;\n  z-index: 3;\n}\n.period__nonpaid {\n  background-color: red;\n  cursor: pointer;\n}\n.period__paid {\n  background-color: green;\n  cursor: pointer;\n}\n.assets__totalpaid {\n  display: flex;\n  justify-content: flex-end;\n  margin: 25px 70px;\n}\n.breakpoint {\n  min-height: 30px;\n}\n\n.assetbox__adress--title {\n  align-items: flex-start;\n  display: flex;\n}\n.table {\n  margin: 20px 70px;\n  overflow-x: scroll;\n  padding-bottom: 100px;\n}\n\n.assets__header {\n  display: flex;\n  align-items: center;\n}\n\n.period__wrapper {\n  display: flex;\n}\n\n.table__periods,\n.asset__adress {\n  display: flex;\n}\n.asset__result {\n  display: flex;\n}\n.asset__amount {\n  //margin: 0 20px;\n}\n.assetbox__title {\n  min-width: 570px;\n  margin-right: 10px;\n}\n.assetbox__adress--title {\n  min-width: 400px;\n  margin-right: 10px;\n}\n.coll-reward {\n  min-width: 100px;\n  padding: 10px;\n  border: 2px solid lightblue;\n  //padding: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.table__subheader--position {\n  margin-top: -2px;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=fdf30530&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Dashboard.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND);\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line max-statements\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    var multiply = function (n, c) {\n      var index = -1;\n      var c2 = c;\n      while (++index < 6) {\n        c2 += n * data[index];\n        data[index] = c2 % 1e7;\n        c2 = floor(c2 / 1e7);\n      }\n    };\n\n    var divide = function (n) {\n      var index = 6;\n      var c = 0;\n      while (--index >= 0) {\n        c += data[index];\n        data[index] = floor(c / n);\n        c = (c % n) * 1e7;\n      }\n    };\n\n    var dataToString = function () {\n      var index = 6;\n      var s = '';\n      while (--index >= 0) {\n        if (s !== '' || index === 0 || data[index] !== 0) {\n          var t = String(data[index]);\n          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n        }\n      } return s;\n    };\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        result = dataToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        result = dataToString() + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=style&index=0&lang=scss&\"","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n"],"sourceRoot":""}