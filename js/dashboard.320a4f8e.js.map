{"version":3,"sources":["webpack:///./node_modules/core-js/internals/object-get-own-property-names-external.js","webpack:///./node_modules/core-js/internals/string-repeat.js","webpack:///./node_modules/core-js/internals/regexp-exec-abstract.js","webpack:///./node_modules/core-js/modules/web.dom-collections.for-each.js","webpack:///./node_modules/core-js/internals/array-for-each.js","webpack:///./node_modules/core-js/internals/array-method-has-species-support.js","webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/core-js/modules/es.string.iterator.js","webpack:///./node_modules/core-js/internals/this-number-value.js","webpack:///./node_modules/core-js/modules/es.array.for-each.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/core-js/internals/array-from.js","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/core-js/internals/string-multibyte.js","webpack:///./node_modules/firebase/database/dist/index.esm.js","webpack:///./src/views/Dashboard.vue?1c4d","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///src/views/Dashboard.vue","webpack:///./src/views/Dashboard.vue?2310","webpack:///./src/views/Dashboard.vue","webpack:///./node_modules/core-js/internals/define-well-known-symbol.js","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./node_modules/core-js/internals/create-property.js","webpack:///./node_modules/core-js/internals/advance-string-index.js","webpack:///./node_modules/core-js/internals/regexp-exec.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:///./node_modules/core-js/modules/es.array.join.js","webpack:///./node_modules/core-js/modules/es.array.splice.js","webpack:///./node_modules/core-js/modules/es.symbol.js","webpack:///./node_modules/core-js/modules/es.array.from.js","webpack:///./node_modules/core-js/modules/es.regexp.exec.js","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./node_modules/core-js/modules/es.object.keys.js","webpack:///./node_modules/core-js/modules/es.number.to-fixed.js","webpack:///./src/views/Dashboard.vue?7a36","webpack:///./node_modules/core-js/modules/es.array.index-of.js","webpack:///./node_modules/core-js/modules/es.symbol.iterator.js","webpack:///./node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/modules/web.dom-collections.iterator.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/core-js/modules/es.symbol.description.js","webpack:///./node_modules/core-js/internals/well-known-symbol-wrapped.js","webpack:///./node_modules/core-js/modules/es.array.slice.js","webpack:///./node_modules/core-js/internals/dom-iterables.js"],"names":["toIndexedObject","nativeGetOwnPropertyNames","f","toString","windowNames","window","Object","getOwnPropertyNames","getWindowNames","it","error","slice","module","exports","call","toInteger","requireObjectCoercible","repeat","count","str","String","this","result","n","Infinity","RangeError","classof","regexpExec","R","S","exec","TypeError","global","DOMIterables","forEach","createNonEnumerableProperty","COLLECTION_NAME","Collection","CollectionPrototype","prototype","$forEach","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","callbackfn","arguments","length","undefined","fails","wellKnownSymbol","V8_VERSION","SPECIES","METHOD_NAME","array","constructor","foo","Boolean","redefine","anObject","flags","TO_STRING","RegExpPrototype","RegExp","nativeToString","NOT_GENERIC","source","INCORRECT_NAME","name","p","rf","unsafe","_interopDefault","ex","defineProperty","value","firebase","tslib","util","logger$1","component","DOMStorageWrapper","domStorage_","prefix_","set","key","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spread","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","isNodeSdk","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","s","ln","ebits","fbits","bias","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","path","toUpperCase","INTEGER_REGEXP_","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","decodePath","pathStringDecoded","piece","decodeURIComponent","replace","decodeQuery","queryString","e_1","_a","results","charAt","_b","__values","_c","next","done","segment","kv","e_1_1","return","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","queryParams","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","setMaxNode","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","setNodeFromJSON","setMaxNode$1","_defaultIndexMap","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON$1","json","jsonLeaf","node_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj","childSet","sortedChildSet","__referenceConstructor","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","thisCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","startName","getIndexStartName","endName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","validateContextObject","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","generateWithValues","values","Date","getTime","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","existing","unused","delta","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","safeToRemove","delete","forEachTree","prefixPath","func","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","Empty","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","generateEventsForChanges_","getInitialEvents","initialChanges","eventNode","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","__read","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","newWriteTree","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","write","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","needToReevaluate","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","defaultTag","stopListening","queryToRemove","tagToRemove","removeTags_","includeHiddenSets","maybeChildSyncPoint","childMap","completeView","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","CONSTANTS","NODE_ADMIN","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","_e","_f","clientName","NODE_CLIENT","isReactNative","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","status_1","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","INTERRUPT_REASON","Repo","forceRestClient","app","authTokenProvider","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authOverride","appId","addTokenChangeListener","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","remainsInWindow","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","Promise","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","currentNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","allRun","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","DATABASE_URL_OPTION","FIREBASE_DATABASE_EMULATOR_HOST_VAR","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","authProvider","isEmulator","dbEmulatorHost","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","__awaiter","__generator","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","freeze","__proto__","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","TEST_ACCESS","registerDatabase","instance","registerComponent","Component","getProvider","setServiceProps","setMultipleInstances","registerVersion","InternalStateModule","defineIterator","STRING_ITERATOR","setInternalState","getInternalState","getterFor","iterated","string","point","state","$","target","proto","forced","nextTick","arch","execPath","title","pid","browser","argv","binding","cwd","chdir","dir","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","toObject","callWithSafeIterationClosing","isArrayIteratorMethod","toLength","createProperty","getIteratorMethod","arrayLike","step","O","C","argumentsLength","mapfn","mapping","iteratorMethod","fixRegExpWellKnownSymbolLogic","advanceStringIndex","regExpExec","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","REPLACE","nativeReplace","maybeCallNative","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","replacer","regexp","rx","functionalReplace","fullUnicode","unicode","lastIndex","matchStr","accumulatedResult","nextSourcePosition","matched","position","captures","namedCaptures","groups","replacerArgs","replacement","getSubstitution","tailPos","symbols","ch","capture","createMethod","CONVERT_TO_STRING","$this","pos","first","second","charCodeAt","codeAt","render","_vm","_h","$createElement","_self","staticClass","copyDone","attrs","_v","model","$$v","isBordered","expression","_s","totalPoolReward","typeofFiltering","$event","$refs","datepicker","toggle","periods","setHours","checkedPeriods","getFullPeriods","selected","multiplyFunction","numDataClear","scopedSlots","_u","props","row","miningPoolAlias","filters","column","field","$set","copyToBuff","alias","asset","_l","period","toDate","rewardforPool","checkifFiltred","sortTest","sortedPeriod","label","class","numisAsc","numData","checkingIfSelected","checkKey","checkThePayment","end","reward","select","singleFunction","miningPoolFullIncome","rewardedPerAsset","staticRenderFns","_arrayLikeToArray","arr","arr2","_arrayWithoutHoles","arrayLikeToArray","_iterableToArray","Symbol","_unsupportedIterableToArray","o","minLen","_nonIterableSpread","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_defineProperty","writable","firebaseConfig","firstlineAssets","lastSnapTime","hasMobileCards","confirmPopUpTitle","confirmPopUpType","tokenPaindOrNot","defaultSortDirection","sortIcon","sortIconSize","loader","methods","rewardforPeriod","checked","tempCheckedEl","toFixed","tempPeriodReward","tempRewPeriod","rewardAmount","changeThePayment","el","tokenPaidOrNot","tempChangeEl","paid","poolClients","tempSnap","keyAdress","buttons","confirmTransfers","$buefy","dialog","confirm","statusToken","messageConstructor","total","periodsData","checkRadio","clipboard","writeText","computed","totalAm","toCalculatedDate","filtredPeriods","created","loading","$store","getters","getfirebaseConfig","poolCurrentPeriod","tempSnapAssetboxesData","tempClientsList","poolPeriods","poolSnapshots","tempPrevMonth","tempDataforFilter","getMonth","wrappedWellKnownSymbolModule","NAME","$find","addToUnscopables","FIND","SKIPS_HOLES","toPrimitive","definePropertyModule","createPropertyDescriptor","object","propertyKey","regexpFlags","stickyHelpers","nativeExec","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","UNSUPPORTED_Y","BROKEN_CARET","NPCG_INCLUDED","PATCH","reCopy","re","sticky","charsAdded","strCopy","multiline","input","isObject","arraySpeciesCreate","arrayMethodHasSpeciesSupport","IS_CONCAT_SPREADABLE","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_INDEX_EXCEEDED","IS_CONCAT_SPREADABLE_SUPPORT","SPECIES_SUPPORT","isConcatSpreadable","spreadable","FORCED","E","A","RE","IndexedObject","nativeJoin","ES3_STRINGS","separator","toAbsoluteIndex","HAS_SPECIES_SUPPORT","ACCESSORS","0","1","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","deleteCount","insertCount","actualDeleteCount","actualStart","getBuiltIn","IS_PURE","DESCRIPTORS","NATIVE_SYMBOL","USE_SYMBOL_AS_UID","nativeObjectCreate","objectKeys","getOwnPropertyNamesModule","getOwnPropertyNamesExternal","getOwnPropertySymbolsModule","getOwnPropertyDescriptorModule","propertyIsEnumerableModule","shared","sharedKey","hiddenKeys","uid","defineWellKnownSymbol","setToStringTag","HIDDEN","SYMBOL","PROTOTYPE","TO_PRIMITIVE","ObjectPrototype","$Symbol","$stringify","nativeGetOwnPropertyDescriptor","nativeDefineProperty","nativePropertyIsEnumerable","AllSymbols","ObjectPrototypeSymbols","StringToSymbolRegistry","SymbolToStringRegistry","WellKnownSymbolsStore","QObject","USE_SETTER","findChild","setSymbolDescriptor","P","Attributes","ObjectPrototypeDescriptor","wrap","description","symbol","isSymbol","$defineProperty","$defineProperties","Properties","properties","$getOwnPropertySymbols","$propertyIsEnumerable","$create","V","$getOwnPropertyDescriptor","descriptor","$getOwnPropertyNames","names","IS_OBJECT_PROTOTYPE","setter","sham","keyFor","sym","useSetter","useSimple","create","getOwnPropertyDescriptor","getOwnPropertySymbols","FORCED_JSON_STRINGIFY","space","$replacer","valueOf","checkCorrectnessOfIteration","INCORRECT_ITERATION","iterable","that","ignoreCase","dotAll","FunctionPrototype","Function","FunctionPrototypeToString","nameRE","nativeKeys","FAILS_ON_PRIMITIVES","thisNumberValue","nativeToFixed","x","acc","x2","fractionDigits","z","number","fractDigits","sign","multiply","c2","divide","dataToString","$indexOf","nativeIndexOf","NEGATIVE_ZERO","searchElement","REPLACE_SUPPORTS_NAMED_GROUPS","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","KEY","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","nativeRegExpMethod","nativeMethod","forceStringMethod","stringMethod","regexMethod","$map","ArrayIteratorMethods","ITERATOR","TO_STRING_TAG","ArrayValues","normalizeArray","parts","allowAboveRoot","up","unshift","basename","matchedSlash","xs","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSlash","paths","relative","trim","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","hasRoot","ext","extname","startDot","startPart","preDotState","copyConstructorProperties","NativeSymbol","EmptyStringDescriptionStore","SymbolWrapper","symbolPrototype","symbolToString","native","desc","nativeSlice","Constructor","fin","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList"],"mappings":"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","file":"js/dashboard.320a4f8e.js","sourcesContent":["var toIndexedObject = require('../internals/to-indexed-object');\nvar nativeGetOwnPropertyNames = require('../internals/object-get-own-property-names').f;\n\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return nativeGetOwnPropertyNames(it);\n  } catch (error) {\n    return windowNames.slice();\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]'\n    ? getWindowNames(it)\n    : nativeGetOwnPropertyNames(toIndexedObject(it));\n};\n","'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar forEach = require('../internals/array-for-each');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  // some Chrome versions have non-configurable methods on DOMTokenList\n  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {\n    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);\n  } catch (error) {\n    CollectionPrototype.forEach = forEach;\n  }\n}\n","'use strict';\nvar $forEach = require('../internals/array-iteration').forEach;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('forEach');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\nmodule.exports = (!STRICT_METHOD || !USES_TO_LENGTH) ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n} : [].forEach;\n","var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = String(R.source);\n    var rf = R.flags;\n    var f = String(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nvar component = require('@firebase/component');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger$1.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += util.stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger$1.LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n */\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return util.stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length) {\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        }\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0) {\r\n                    pieces.push(childPieces[i]);\r\n                }\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0) {\r\n                return cmp;\r\n            }\r\n        }\r\n        if (leftKeys.length === rightKeys.length) {\r\n            return 0;\r\n        }\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length === 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return (this.host !== this.internalHost ||\r\n            this.isCustomHost() ||\r\n            this.includeNamespaceInQueryParams);\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        each(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = tslib.__values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = tslib.__assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = tslib.__assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (util.contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this.node_.isEmpty();\r\n        }\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ change.childName);\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherKeys = Object.keys(other.callbacks_);\r\n                var thisKeys = Object.keys(this.callbacks_);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks_[eventType] === _this.callbacks_[eventType];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName !== MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName !== MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param failureCallbackOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel) {\r\n                ret.cancel.bind(ret.context)(err);\r\n            }\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = this.path_.child(childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return this.syncTree_.calcCompleteEventCache(this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        util.assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            util.assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        util.assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        util.assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    util.assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        this.value = null;\r\n        this.children = new Map();\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value != null) {\r\n            return this.value.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children.size > 0) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children.has(childKey)) {\r\n                var childTree = this.children.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value = data;\r\n            this.children.clear();\r\n        }\r\n        else if (this.value !== null) {\r\n            this.value = this.value.updateChild(path, data);\r\n        }\r\n        else {\r\n            var childKey = path.getFront();\r\n            if (!this.children.has(childKey)) {\r\n                this.children.set(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value = null;\r\n            this.children.clear();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value !== null) {\r\n                if (this.value.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value;\r\n                    this.value = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children.size > 0) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children.has(childKey)) {\r\n                    var safeToRemove = this.children.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children.delete(childKey);\r\n                    }\r\n                }\r\n                return this.children.size === 0;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value !== null) {\r\n            func(prefixPath, this.value);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        this.children.forEach(function (tree, key) {\r\n            func(key, tree);\r\n        });\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        util.assert(type === Change.CHILD_ADDED ||\r\n            type === Change.CHILD_CHANGED ||\r\n            type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\n// eslint-disable-next-line @typescript-eslint/class-name-casing\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap.getNode().equals(/** @type {!Node} */ oldCompleteSnap)) ||\r\n                !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey === '.priority') {\r\n                    util.assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey === '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache.getServerCache().getNode().isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return this.views.size === 0;\r\n    };\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var e_1, _a;\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = this.views.get(queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events = [];\r\n            try {\r\n                for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var view = _c.value;\r\n                    events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = this.views.get(queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ eventCache, eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ serverCache, serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views.set(queryId, view);\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var e_2, _a;\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            try {\r\n                // When you do ref.off(...), we search all views for the registration to remove.\r\n                for (var _b = tslib.__values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var _d = tslib.__read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                    cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                    if (view.isEmpty()) {\r\n                        this.views.delete(viewQueryId);\r\n                        // We'll deal with complete views later.\r\n                        if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                            removed.push(view.getQuery());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = this.views.get(queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    this.views.delete(queryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var e_3, _a;\r\n        var result = [];\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                    result.push(view);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var e_4, _a;\r\n        var serverCache = null;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                serverCache = serverCache || view.getCompleteServerCache(path);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return serverCache;\r\n    };\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return this.views.get(queryId);\r\n        }\r\n    };\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (view.getQuery().getQueryParams().loadsAllData()) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        each(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param path The path to check for\r\n     * @return Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param path The path to get a complete write\r\n     * @return The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param node The node to apply this CompoundWrite to\r\n     * @return The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return applySubtreeWrite(Path.Empty, this.writeTree_, node);\r\n    };\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    return CompoundWrite;\r\n}());\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                each(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            for (var childName in writeRecord.children) {\r\n                if (writeRecord.children.hasOwnProperty(childName) &&\r\n                    writeRecord.path.child(childName).contains(path)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                each(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap.set(queryKey, tag);\r\n            this.tagToQueryMap.set(tag, queryKey);\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n     * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n     * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n     *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                each(childMap, function (_key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\r\n                this.queryToTagMap.delete(removedQueryKey);\r\n                this.tagToQueryMap.delete(removedQueryTag);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    each(childMap, function (_key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap.get(tag);\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return this.queryToTagMap.get(queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = tslib.__assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} varArgs\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = tslib.__spread(this.listeners_[eventType]);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (util.isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = tslib.__values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param applicationId_ The Firebase App ID for this project\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        /** Map<path, Map<queryId, ListenSpec>> */\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = tslib.__values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient, app, authTokenProvider) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactionsInit_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    // TODO: This should be @private but it's used by test_access.js and internal.js\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (key, value) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var existing = this.serverSyncTree_.calcCompleteEventCache(path);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        each(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            each(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = new SparseSnapshotTree();\r\n        this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\r\n            var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\r\n            resolvedOnDisconnectTree.remember(path, resolved);\r\n        });\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                each(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_) {\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            }\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        each(stats, function (stat, value) {\r\n            var paddedStat = stat;\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++) {\r\n                paddedStat += ' ';\r\n            }\r\n            console.log(paddedStat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    Repo.prototype.log_ = function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status === 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason) {\r\n                        message += ': ' + errorReason;\r\n                    }\r\n                    var error = new Error(message);\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty()) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.path.getBack();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null) {\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            }\r\n            else {\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n            }\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        if (applyLocally === undefined) {\r\n            applyLocally = true;\r\n        }\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next = path.getFront();\r\n        while (next !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n            next = path.getFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        each(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst) {\r\n            action(this);\r\n        }\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst) {\r\n            action(this);\r\n        }\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null) {\r\n                action(child);\r\n            }\r\n            else {\r\n                child.forEachImmediateDescendantWithValue(action);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null) {\r\n            this.parent_.updateChild_(this.name_, this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.transactionsInit_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    }\r\n                    else {\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    front = path.getFront();\r\n    while (front !== null && transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n        front = path.getFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(app_, authProvider_) {\r\n        var _this = this;\r\n        this.app_ = app_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\r\nvar EmulatorAdminTokenProvider = /** @class */ (function () {\r\n    function EmulatorAdminTokenProvider() {\r\n    }\r\n    EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\r\n        });\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\r\n    return EmulatorAdminTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].interrupt();\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        var e_3, _a, e_4, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_4 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].resume();\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, authProvider, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        var isEmulator;\r\n        var dbEmulatorHost = undefined;\r\n        if (typeof process !== 'undefined') {\r\n            dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n        }\r\n        if (dbEmulatorHost) {\r\n            isEmulator = true;\r\n            dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n            parsedUrl = parseRepoInfo(dbUrl);\r\n            repoInfo = parsedUrl.repoInfo;\r\n        }\r\n        else {\r\n            isEmulator = !parsedUrl.repoInfo.secure;\r\n        }\r\n        var authTokenProvider = util.CONSTANTS.NODE_ADMIN && isEmulator\r\n            ? new EmulatorAdminTokenProvider()\r\n            : new FirebaseAuthTokenProvider(app, authProvider);\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app, authTokenProvider);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        },\r\n        increment: function (delta) {\r\n            return {\r\n                '.sv': {\r\n                    'increment': delta\r\n                }\r\n            };\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            return tslib.__generator(this, function (_a) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.checkDeleted_('delete');\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.repo_ = null;\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\nvar name = \"@firebase/database\";\nvar version = \"0.6.11\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new component.Component('database', function (container, url) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;\n//# sourceMappingURL=index.cjs.js.map\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/define-iterator');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: String(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return { value: undefined, done: true };\n  point = charAt(string, index);\n  state.index += point.length;\n  return { value: point, done: false };\n});\n","var classof = require('../internals/classof-raw');\n\n// `thisNumberValue` abstract operation\n// https://tc39.github.io/ecma262/#sec-thisnumbervalue\nmodule.exports = function (value) {\n  if (typeof value != 'number' && classof(value) != 'Number') {\n    throw TypeError('Incorrect invocation');\n  }\n  return +value;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar forEach = require('../internals/array-for-each');\n\n// `Array.prototype.forEach` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.foreach\n$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {\n  forEach: forEach\n});\n","exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar toObject = require('../internals/to-object');\nvar callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');\nvar isArrayIteratorMethod = require('../internals/is-array-iterator-method');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\n// `Array.from` method implementation\n// https://tc39.github.io/ecma262/#sec-array.from\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject(arrayLike);\n  var C = typeof this == 'function' ? this : Array;\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  var iteratorMethod = getIteratorMethod(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {\n    iterator = iteratorMethod.call(O);\n    next = iterator.next;\n    result = new C();\n    for (;!(step = next.call(iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty(result, index, value);\n    }\n  } else {\n    length = toLength(O.length);\n    result = new C(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","var toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.{ codePointAt, at }` methods implementation\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = String(requireObjectCoercible($this));\n    var position = toInteger(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = S.charCodeAt(position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING ? S.charAt(position) : first\n        : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","import '@firebase/database';\n//# sourceMappingURL=index.esm.js.map\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dashboard\"},[(_vm.copyDone == true)?_c('div',{staticClass:\"allert__mes\"},[_c('b-message',{attrs:{\"type\":\"is-success\",\"has-icon\":\"\",\"auto-close\":\"\",\"duration\":600}},[_vm._v(\"Данные скопированные\")])],1):_vm._e(),_c('b-field',{attrs:{\"grouped\":\"\",\"group-multiline\":\"\"}},[_c('div',{staticClass:\"container--conrolers\"},[_c('div',{staticClass:\"control control--border\"},[_c('b-switch',{model:{value:(_vm.isBordered),callback:function ($$v) {_vm.isBordered=$$v},expression:\"isBordered\"}},[_c('span',{staticClass:\"total__title\"},[_vm._v(\"Границы таблицы\")])])],1),_c('div',{staticClass:\"total__pool-reward\"},[_c('span',{staticClass:\"total__title\"},[_vm._v(\" Общая награда полученная участниками пула - \"),_c('span',{staticClass:\"total__title--pool-reward\"},[_vm._v(_vm._s(_vm.totalPoolReward))])])])])]),_c('hr'),_c('section',{staticClass:\"filter__container\"},[_c('div',{staticClass:\"block filter__conrols\"},[_c('b-radio',{attrs:{\"name\":\"type\",\"native-value\":\"period\"},model:{value:(_vm.typeofFiltering),callback:function ($$v) {_vm.typeofFiltering=$$v},expression:\"typeofFiltering\"}},[_vm._v(\" Период \")]),_c('b-radio',{attrs:{\"name\":\"type\",\"native-value\":\"oneday\"},model:{value:(_vm.typeofFiltering),callback:function ($$v) {_vm.typeofFiltering=$$v},expression:\"typeofFiltering\"}},[_vm._v(\" Один день \")])],1),(_vm.typeofFiltering == 'period')?_c('div',{staticClass:\"filter__datapicker\"},[_c('b-field',[_c('b-button',{attrs:{\"icon-left\":\"calendar-today\",\"type\":\"is-primary\"},on:{\"click\":function($event){return _vm.$refs.datepicker.toggle()}}}),_c('b-datepicker',{ref:\"datepicker\",attrs:{\"placeholder\":\"Нажмите для выбора...\",\"range\":\"\",\"min-date\":_vm.periods[0] !== undefined ? new Date (new Date(_vm.periods[0].start).setHours(0)) : new Date(),\"max-date\":new Date()},model:{value:(_vm.checkedPeriods),callback:function ($$v) {_vm.checkedPeriods=$$v},expression:\"checkedPeriods\"}})],1)],1):_vm._e(),(_vm.typeofFiltering == 'oneday')?_c('div',{staticClass:\"filter__datapicker\"},[_c('b-field',[_c('b-button',{attrs:{\"icon-left\":\"calendar-today\",\"type\":\"is-primary\"},on:{\"click\":function($event){return _vm.$refs.datepicker.toggle()}}}),_c('b-datepicker',{ref:\"datepicker\",attrs:{\"placeholder\":\"Нажмите для выбора...\",\"min-date\":_vm.periods[0] !== undefined ? new Date (new Date(_vm.periods[0].start).setHours(0)) : new Date(),\"max-date\":new Date()},model:{value:(_vm.checkedPeriods),callback:function ($$v) {_vm.checkedPeriods=$$v},expression:\"checkedPeriods\"}})],1)],1):_vm._e(),_c('b-button',{attrs:{\"type\":\"is-primary is-light\"},on:{\"click\":_vm.getFullPeriods}},[_vm._v(\"Все периоды\")])],1),_c('hr'),_c('div',{staticClass:\"table__container\",on:{\"mouseup\":function($event){_vm.selected.length > 1 ? _vm.multiplyFunction() : null}}},[_c('section',[_c('b-table',{attrs:{\"data\":_vm.data == [] ? [] : _vm.data,\"bordered\":_vm.isBordered,\"striped\":true,\"mobile-cards\":true,\"row-class\":function () { return 'dashboard__row'; },\"default-sort\":\"id\"},on:{\"sort\":_vm.numDataClear}},[_c('b-table-column',{attrs:{\"field\":\"id\",\"label\":\"ID\",\"sortable\":\"\",\"width\":\"40\",\"numeric\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('div',{staticClass:\"selected--none\"},[_vm._v(_vm._s(props.row.id))])]}}])}),_c('b-table-column',{attrs:{\"field\":\"alias\",\"centered\":false,\"label\":\"Alias\",\"cell-class\":\"column--fixed\",\"subheading\":_vm.miningPoolAlias,\"sortable\":\"\",\"searchable\":\"\"},scopedSlots:_vm._u([{key:\"searchable\",fn:function(props){return [_c('b-input',{attrs:{\"placeholder\":\"Поиск\",\"icon\":\"magnify\",\"size\":\"is-small\",\"custom-class\":\"input__search\"},model:{value:(props.filters[props.column.field]),callback:function ($$v) {_vm.$set(props.filters, props.column.field, $$v)},expression:\"props.filters[props.column.field]\"}})]}},{key:\"default\",fn:function(props){return [_c('div',{staticClass:\"dashboard__alias\",on:{\"click\":function($event){return _vm.copyToBuff( props.row.alias )}}},[_c('div',{staticClass:\"selected--none\"},[_vm._v(_vm._s(props.row.alias))])])]}}])}),_c('b-table-column',{attrs:{\"field\":\"asset\",\"centered\":false,\"label\":\"Asset\",\"subheading\":\"0xfbebbdf7278ecdc1cf6eb5679b679a4360c40ae7\",\"searchable\":\"\"},scopedSlots:_vm._u([{key:\"searchable\",fn:function(props){return [_c('b-input',{attrs:{\"placeholder\":\"Поиск\",\"icon\":\"magnify\",\"size\":\"is-small\",\"custom-class\":\"input__search\"},model:{value:(props.filters[props.column.field]),callback:function ($$v) {_vm.$set(props.filters, props.column.field, $$v)},expression:\"props.filters[props.column.field]\"}})]}},{key:\"default\",fn:function(props){return [_c('div',{staticClass:\"dashboard__asset selected--none\",on:{\"click\":function($event){return _vm.copyToBuff(props.row.asset)}}},[_vm._v(_vm._s(props.row.asset))])]}}])}),_vm._l((_vm.periods),function(period,num){return _c('b-table-column',{key:num,attrs:{\"label\":_vm.toDate(period),\"field\":(\"reward[\" + num + \"].reward\"),\"centered\":\"\",\"subheading\":_vm.rewardforPool(period),\"visible\":_vm.checkifFiltred(period),\"cell-class\":\"dasboadrd__periods-reward\",\"sortable\":\"\",\"custom-sort\":_vm.sortTest},scopedSlots:_vm._u([{key:\"header\",fn:function(ref){\nvar column = ref.column;\nreturn [_c('div',{staticClass:\"period__sorted--container\",on:{\"click\":function($event){return _vm.sortedPeriod(num)}}},[_c('div',[_vm._v(_vm._s(column.label))]),_c('b-icon',{class:[{ 'is-desc': !_vm.numisAsc }, 'period__sorted--arrow', 'period__sorted', {'period__sorted--visible': _vm.numData === num}],attrs:{\"icon\":\"arrow_upward\",\"both\":\"\",\"size\":\"is-small\"}})],1)]}},{key:\"default\",fn:function(props){return [_c('div',{class:[{ selected: _vm.checkingIfSelected(_vm.checkKey(props.row.id, num)) == true && _vm.checkThePayment(props.row.asset , period)}, _vm.checkThePayment(props.row.asset , period), 'selected--none'],attrs:{\"data-key\":_vm.checkKey(props.row.id, num),\"data-asset\":props.row.asset,\"data-periodstart\":period.start,\"data-periodend\":period.end,\"data-reward\":props.row.reward[num].reward},on:{\"click\":function($event){props.row.reward[num].reward !== 0 ? _vm.copyToBuff( props.row.reward[num].reward ) : null},\"mousedown\":_vm.select,\"mouseover\":_vm.select,\"mouseup\":function($event){_vm.selected.length > 1 ? null : _vm.singleFunction( _vm.checkThePayment(props.row.asset , period) )}}},[_vm._v(_vm._s(props.row.reward[num].reward))])]}}],null,true)})}),_c('b-table-column',{attrs:{\"sortable\":\"\",\"field\":\"totel\",\"subheading\":_vm.miningPoolFullIncome,\"label\":\"Total\"},scopedSlots:_vm._u([{key:\"default\",fn:function(props){return [_c('div',{staticClass:\"dashboard__total selected--none\",on:{\"click\":function($event){_vm.copyToBuff(_vm.rewardedPerAsset( props.row.asset ))}}},[_vm._v(_vm._s(_vm.rewardedPerAsset(props.row.asset)))])]}}])})],2)],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","<template>\n  <div class=\"dashboard\">\n    <div class=\"allert__mes\" v-if=\"copyDone == true\">\n      <b-message type=\"is-success\" has-icon auto-close :duration=\"600\">Данные скопированные</b-message>\n    </div>\n\n    <b-field grouped group-multiline>\n      <div class=\"container--conrolers\">\n        <div class=\"control control--border\">\n          <b-switch v-model=\"isBordered\">\n            <span class=\"total__title\">Границы таблицы</span>\n          </b-switch>\n        </div>\n        <div class=\"total__pool-reward\">\n          <span class=\"total__title\">\n            Общая награда полученная участниками пула -\n            <span\n              class=\"total__title--pool-reward\"\n            >{{totalPoolReward}}</span>\n          </span>\n        </div>\n      </div>\n    </b-field>\n    <hr />\n    \n    <section class=\"filter__container\">\n      <div class=\"block filter__conrols\">\n        <b-radio \n          v-model=\"typeofFiltering\"\n          name=\"type\"\n          native-value=\"period\">\n          Период\n        </b-radio>\n        <b-radio \n          v-model=\"typeofFiltering\"\n          name=\"type\"\n          native-value=\"oneday\">\n          Один день\n        </b-radio>\n      </div>\n      <div class=\"filter__datapicker\" v-if=\"typeofFiltering == 'period'\">\n        <b-field>\n                <b-button\n                    @click=\"$refs.datepicker.toggle()\"\n                    icon-left=\"calendar-today\"\n                    type=\"is-primary\" />\n                <b-datepicker\n                    placeholder=\"Нажмите для выбора...\"\n                    v-model=\"checkedPeriods\"\n                    range\n                    :min-date=\"periods[0] !== undefined ? new Date (new Date(periods[0].start).setHours(0)) : new Date()\"\n                    :max-date=\"new Date()\"\n                    ref=\"datepicker\"\n                    >\n                </b-datepicker>\n        </b-field>\n      </div>\n\n      <div class=\"filter__datapicker\" v-if=\"typeofFiltering == 'oneday'\">\n        <b-field>\n                <b-button\n                    @click=\"$refs.datepicker.toggle()\"\n                    icon-left=\"calendar-today\"\n                    type=\"is-primary\"/>\n                <b-datepicker\n                    placeholder=\"Нажмите для выбора...\"\n                    v-model=\"checkedPeriods\"\n                    :min-date=\"periods[0] !== undefined ? new Date (new Date(periods[0].start).setHours(0)) : new Date()\"\n                    :max-date=\"new Date()\"\n                    ref=\"datepicker\"\n                    >\n                </b-datepicker>\n        </b-field>\n      </div>\n\n      <b-button type=\"is-primary is-light\" @click=\"getFullPeriods\">Все периоды</b-button>\n    </section>\n    <hr />\n\n    <div class=\"table__container\" @mouseup=\"selected.length > 1 ? multiplyFunction() : null\">\n      <section>\n        <b-table\n          :data=\"data == [] ? [] : data\"\n          :bordered=\"isBordered\"\n          :striped=\"true\"\n          :mobile-cards=\"true\"\n          :row-class=\"() => 'dashboard__row'\"\n          default-sort=\"id\"\n          @sort=\"numDataClear\"\n        >\n          <b-table-column field=\"id\" label=\"ID\" sortable width=\"40\" numeric v-slot=\"props\">\n            <div class=\"selected--none\">{{ props.row.id }}</div>\n          </b-table-column>\n\n          <b-table-column\n            field=\"alias\"\n            :centered=\"false\"\n            label=\"Alias\"\n            cell-class=\"column--fixed\"\n            :subheading=\"miningPoolAlias\"\n            sortable\n            searchable\n          >\n            <template slot=\"searchable\" slot-scope=\"props\">\n              <b-input\n                v-model=\"props.filters[props.column.field]\"\n                placeholder=\"Поиск\"\n                icon=\"magnify\"\n                size=\"is-small\"\n                custom-class=\"input__search\"\n              />\n            </template>\n            <template v-slot=\"props\">\n              <div @click=\"copyToBuff( props.row.alias )\" class=\"dashboard__alias\">\n                <div class=\"selected--none\">{{ props.row.alias }}</div>\n              </div>\n            </template>\n          </b-table-column>\n\n          <b-table-column\n            field=\"asset\"\n            :centered=\"false\"\n            label=\"Asset\"\n            subheading=\"0xfbebbdf7278ecdc1cf6eb5679b679a4360c40ae7\"\n            searchable\n          >\n            <template slot=\"searchable\" slot-scope=\"props\">\n              <b-input\n                v-model=\"props.filters[props.column.field]\"\n                placeholder=\"Поиск\"\n                icon=\"magnify\"\n                size=\"is-small\"\n                custom-class=\"input__search\"\n              />\n            </template>\n            <template v-slot=\"props\">\n              <div\n                class=\"dashboard__asset selected--none\"\n                @click=\"copyToBuff(props.row.asset)\"\n              >{{ props.row.asset }}</div>\n            </template>\n          </b-table-column>\n\n          <b-table-column\n            v-for=\"(period, num) in periods\"\n            :key=\"num\"\n            :label=\"toDate(period)\"\n            :field=\"`reward[${num}].reward`\"\n            centered\n            :subheading=\"rewardforPool(period)\"\n            :visible=\"checkifFiltred(period)\"\n            cell-class='dasboadrd__periods-reward'\n            sortable\n            :custom-sort=\"sortTest\"\n          >\n            <template v-slot:header=\"{ column }\">\n              <div class=\"period__sorted--container\"  @click=\"sortedPeriod(num)\">\n                <div>{{ column.label }}</div>\n                <b-icon icon=\"arrow_upward\" both size=\"is-small\" :class=\"[{ 'is-desc': !numisAsc }, 'period__sorted--arrow', 'period__sorted', {'period__sorted--visible': numData === num}]\"></b-icon>\n              </div>\n            </template>\n            <template v-slot=\"props\">\n\n              <div\n                :class=\"[{ selected: checkingIfSelected(checkKey(props.row.id, num)) == true && checkThePayment(props.row.asset , period)}, checkThePayment(props.row.asset , period), 'selected--none']\"\n                @click=\"props.row.reward[num].reward !== 0 ? copyToBuff( props.row.reward[num].reward ) : null\"\n                @mousedown=\"select\"\n                @mouseover=\"select\"\n                @mouseup=\"selected.length > 1 ? null : singleFunction( checkThePayment(props.row.asset , period) )\"\n                :data-key=\"checkKey(props.row.id, num)\"\n                :data-asset=\"props.row.asset\"\n                :data-periodstart=\"period.start\"\n                :data-periodend=\"period.end\"\n                :data-reward=\"props.row.reward[num].reward\"\n              >{{props.row.reward[num].reward}}</div>\n\n            </template>\n          </b-table-column>\n\n          <b-table-column\n            sortable\n            field=\"totel\"\n            :subheading=\"miningPoolFullIncome\"\n            label=\"Total\"\n            v-slot=\"props\"\n          >\n            <div\n              class=\"dashboard__total selected--none\"\n              @click=\"copyToBuff(rewardedPerAsset( props.row.asset ))\"\n            >{{ rewardedPerAsset(props.row.asset) }}</div>\n          </b-table-column>\n        </b-table>\n      </section>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as firebase from \"firebase/app\";\nrequire(\"firebase/database\");\n\nexport default {\n  data: function () {\n    return {\n      firebaseConfig: \"\",\n      firstlineAssets: null,\n      snapshot: null,\n      periods: [],\n      time: 0,\n      lastSnapTime: 0,\n      data: [],\n      hasMobileCards: true,\n      selected: [],\n      mess:[],\n      confirmPopUpTitle: '',\n      confirmPopUpType: '',\n      tokenPaindOrNot: null,\n      copyDone: null,\n      miningPoolFullIncome: 0,\n      miningPoolAlias: '',\n      numData: null,   \n      numisAsc: true,\n      \n      //table val\n      isBordered: false,\n      defaultSortDirection: 'asc',\n      sortIcon: 'arrow-up',\n      sortIconSize: 'is-small',\n      loader: null,\n      selected: [],\n\n      //filter\n      checkedPeriods: [],\n      filtredPeriods: [],\n      typeofFiltering: 'period',\n    };\n  },\n  methods: {\n    toDate(el) {\n      let startDate = new Date(el.start);\n      let startMonth = startDate.getMonth()+1;\n      let start =\n        startDate.getDate() +\n        \".\" +\n        (startMonth < 10 ? \"0\" : \"\") +\n        startMonth +\n        \".\" +\n        startDate.getFullYear();\n\n      let endDate = new Date(el.end);\n      let endMonth = endDate.getMonth()+1;\n      let end =\n        endDate.getDate() +\n        \".\" +\n        (endMonth < 10 ? \"0\" : \"\") +\n        endMonth +\n        \".\" +\n        endDate.getFullYear();\n\n      let result = `${start} ${end}`;\n      return result;\n    },\n    rewardforPeriod(asset, period) {\n      let checked = this.snapshot.find((el) => el.adress == asset);\n      if (this.time > period.end) {\n        if (checked !== undefined) {\n          if (\n            checked.rewardedPeriod !== undefined &&\n            checked.rewardedPeriod !== 0\n          ) {\n            for (\n              let i = 0;\n              i <= Object.keys(checked.rewardedPeriod).length - 1;\n              i++\n            ) {\n              let checkedEl =\n                checked.rewardedPeriod[Object.keys(checked.rewardedPeriod)[i]];\n\n              if (\n                checkedEl.start === period.start &&\n                checkedEl.end === period.end\n              ) {\n                return `${checkedEl.rewardAmount}`;\n              } else if (i == Object.keys(checked.rewardedPeriod).length - 1) {\n                return 0;\n              }\n            }\n          } else {\n            return 0;\n          }\n        } else {\n          return 0;\n        }\n      } else {\n        return \"-\";\n      }\n    },\n    rewardedPerAsset(el) {\n      let tempCheckedEl = this.snapshot.find((element) => element.adress == el);\n      if (tempCheckedEl !== undefined) {\n        let result = 0;\n        for (\n          let i = 0;\n          i < Object.keys(tempCheckedEl.rewardedPeriod).length;\n          i++\n        ) {\n          result =\n            result +\n            tempCheckedEl.rewardedPeriod[\n              Object.keys(tempCheckedEl.rewardedPeriod)[i]\n            ].rewardAmount;\n        }\n\n        this.data.find(element => {\n          \n          if(element.asset == el){\n            let index = this.data.indexOf(element);\n            if(index !== -1){ this.data[index].totel = result.toFixed(8);}\n            \n          }\n        });\n     \n        return result.toFixed(8);\n      }\n    },\n    rewardforPool(period) {\n      let tempPeriodReward = period.poolReward;\n      if (\n        tempPeriodReward !== 0 &&\n        tempPeriodReward !== undefined &&\n        tempPeriodReward > 0\n      ) {\n        this.snapshot.forEach((el) => {\n          for (let i = 0; i < Object.keys(el.rewardedPeriod).length; i++) {\n            let tempRewPeriod =\n              el.rewardedPeriod[Object.keys(el.rewardedPeriod)[i]];\n            if (\n              tempRewPeriod.start === period.start &&\n              tempRewPeriod.end === period.end\n            ) {\n              tempPeriodReward = tempPeriodReward - tempRewPeriod.rewardAmount;\n            }\n          }\n        });\n\n        return tempPeriodReward.toFixed(8);\n      } else if (tempPeriodReward !== undefined && this.time >= period.end) {\n        return tempPeriodReward;\n      } else {\n        return \"-\";\n      }\n    },\n    changeThePayment(el, period, tokenPaidOrNot) {\n      console.log(el, period, tokenPaidOrNot);\n      let checked = this.snapshot.find((element) => element.adress == el);\n\n      if (checked !== undefined) {\n        for (let i = 0; i < Object.keys(checked.rewardedPeriod).length; i++) {\n          let tempChangeEl =\n            checked.rewardedPeriod[Object.keys(checked.rewardedPeriod)[i]];\n\n          if (\n            tempChangeEl.start == period.periodstart &&\n            tempChangeEl.end == period.periodend\n          ) {\n            tempChangeEl.paid = tokenPaidOrNot;\n            if (!firebase.apps.length) {\n              this.firebaseConfig = this.$store.getters.getfirebaseConfig;\n              firebase.initializeApp(this.firebaseConfig);\n            }\n\n            let database = firebase.database();\n            let poolClients = database.ref(\"/firstline\");\n\n            poolClients.once(\"value\").then((snapshot) => {\n              let tempSnap = snapshot.val();\n              let tempData = [];\n              let keyAdress = null;\n\n              if (tempSnap !== 0) {\n                for (let i = 0; i < Object.keys(tempSnap).length; i++) {\n                  if (tempSnap[Object.keys(tempSnap)[i]].adress === el) {\n                    keyAdress = Object.keys(tempSnap)[i];\n                    let checkedAssetforCommit =\n                      tempSnap[Object.keys(tempSnap)[i]];\n                    for (\n                      let i = 0;\n                      i <\n                      Object.keys(checkedAssetforCommit.rewardedPeriod).length;\n                      i++\n                    ) {\n                      let tempRewPer =\n                        checkedAssetforCommit.rewardedPeriod[\n                          Object.keys(checkedAssetforCommit.rewardedPeriod)[i]\n                        ];\n                      if (\n                        tempRewPer.start == period.periodstart &&\n                        tempRewPer.end == period.periodend\n                      ) {\n                        let keyPeriod = Object.keys(\n                          checkedAssetforCommit.rewardedPeriod\n                        )[i];\n                        if (\n                          keyAdress !== null &&\n                          keyAdress !== undefined &&\n                          keyPeriod !== undefined\n                        ) {\n                          poolClients\n                            .child(`/${keyAdress}`)\n                            .child(\"/rewardedPeriod\")\n                            .child(`/${keyPeriod}`)\n                            .update({ paid: tempChangeEl.paid });\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            });\n          }\n        }\n      }\n    },\n    checkThePayment(el, period) {\n      let checked = this.snapshot.find((element) => element.adress == el);\n      if (checked !== undefined) {\n        for (let i = 0; i < Object.keys(checked.rewardedPeriod).length; i++) {\n          let tempChangeEl =\n            checked.rewardedPeriod[Object.keys(checked.rewardedPeriod)[i]];\n          if (\n            tempChangeEl.start === period.start && \n            tempChangeEl.end === period.end\n          ) {\n            if (tempChangeEl.paid === false && tempChangeEl.rewardAmount !== 0) {\n              return \"period__nonpaid\";\n            } else if (tempChangeEl.paid === true) {\n              return \"period__paid\";\n            }\n          }\n        }\n      }\n    },\n    checkKey: (x,y) => `${y}.${x}`,\n    select({ buttons, target: { dataset: { key, asset, periodstart, periodend, reward } }}) {\n      if (buttons) {\n        const checked = this.selected.find(el => el.id == key);\n        if (checked !== undefined) {\n          this.selected.splice(this.selected.indexOf(checked), 1);\n        } else if(reward > 0){\n          this.selected.push({ id: key, adress: asset, periodStart: periodstart, periodEnd: periodend, rewardForPeriod: reward });\n        }\n      }\n    },\n    checkingIfSelected(elementCoord){\n      let checked = this.selected.find(el=> el.id == elementCoord);\n      if(checked !== undefined){return true}else{return false};\n    },\n    confirmTransfers(statusToken){\n      this.$buefy.dialog.confirm({\n                    title: `${this.confirmPopUpTitle}`,\n                    message: `${this.messageConstructor()}`, \n                    cancelText: 'Отменить',\n                    confirmText: 'Подтвердить',\n                    \n                    type: `${this.confirmPopUpType}`,\n                    onConfirm: () => {\n\n                      if(statusToken == 'multiply'){\n                        let tempChouseOption = this.checkRadio();\n                        switch(tempChouseOption){\n                          case 'true': this.tokenPaindOrNot = true; break;\n                          case 'false': this.tokenPaindOrNot = false; break;\n                        }\n                      }\n                                \n                      this.mess.forEach(el=>{\n                        el.periods.forEach(period =>{\n                          const token = this.tokenPaindOrNot;\n                          console.log(token);\n                          token !== null ? this.changeThePayment(el.asset, period, token) : null;\n                        })\n                      })        \n                      this.mess = [];\n\n                      this.tokenPaindOrNot == true \n                      ? this.$buefy.toast.open({\n                        duration: 500,\n                        message: `Платеж подтвержден`})\n                      \n                      : this.$buefy.toast.open({\n                        duration: 500,\n                        message: `Платеж отменен`});\n\n                      this.tokenPaindOrNot = null;\n                    },\n                    onCancel: () => {this.mess = [];}\n                })\n    },\n    singleFunction(statusPaid){  \n      if(this.selected.length > 0){\n        if(statusPaid == 'period__nonpaid'){\n\n           this.mess.push({ asset: this.selected[0].adress, periods:[{periodstart:this.selected[0].periodStart, periodend: this.selected[0].periodEnd, reward: this.selected[0].rewardForPeriod}]});\n           this.confirmPopUpTitle = 'Подтвердить проведение платежа';\n           this.confirmPopUpType = 'is-success';\n           this.tokenPaindOrNot = true;\n           this.confirmTransfers();\n\n        }else if(statusPaid == 'period__paid'){\n\n           this.mess.push({ asset: this.selected[0].adress, periods:[{periodstart:this.selected[0].periodStart, periodend: this.selected[0].periodEnd, reward: this.selected[0].rewardForPeriod}]});\n           this.confirmPopUpTitle = 'Подтвердить отмену платежа';\n           this.confirmPopUpType = 'is-danger';\n           this.tokenPaindOrNot = false;\n\n           let statusToken = 'single';\n           this.confirmTransfers(statusToken);\n        } \n      }\n    },\n    multiplyFunction(){\n      this.selected.forEach(el => {\n        if(this.selected.length > 0) {\n\n          let checkedIndex = -1;\n\n          this.mess.forEach((element, index) => {\n            if(element.asset == el.adress){\n            checkedIndex = index;\n          }});\n\n          if(checkedIndex !== -1){\n            this.mess[checkedIndex].periods.push({periodstart:el.periodStart, periodend: el.periodEnd, reward: el.rewardForPeriod});\n          }else{\n            this.mess.push({ asset: el.adress, periods:[{periodstart:el.periodStart, periodend: el.periodEnd, reward: el.rewardForPeriod}]});\n          }\n        }   \n      })\n      this.confirmPopUpTitle = 'Подтвердить изменение для группы';\n      this.confirmPopUpType = 'is-success';\n\n      let statusToken = 'multiply';\n      this.confirmTransfers(statusToken);\n    },\n    messageConstructor(){\n      let row = [];\n      let tempMess = this.mess.forEach((el,index) =>{\n        let header = `<h1 class=\"confirm__asset\">${el.asset}</h1>`;\n        let total = 0;\n        let periodsData = [];\n\n        for(let i = 0; i < el.periods.length; i++){\n\n          let starting = parseInt(el.periods[i].periodstart);\n          let ending = parseInt(el.periods[i].periodend);\n          let sendEl = {start: starting, end: ending};\n          total = total + parseFloat(el.periods[i].reward);\n\n          periodsData.push(`\n          <h3 class=\"confirm__period\">\n            <div class=\"confirm__period--title\">${this.toDate(sendEl).replace(' ', ' - ')} </div>\n            <div class=\"confirm__period--amount\">${el.periods[i].reward}</div>\n          </h3>`);\n        }\n        const totalString = `\n        <h3 class=\"confirm__period-total\">\n          <div class=\"confirm__period-total--title\">Total:</div>\n          <div class=\"confirm__period-total--amount\">${total.toFixed(8)}</div>\n        </h3>`\n      \n        row.push(`${header + periodsData.join(\"\") + totalString} <hr>`);    \n      })\n      \n      if( this.selected.length > 1){\n        const multipleSwitch =`\n        <div class=\"changeStage\">\n          <input type=\"radio\"  class=\"switch-status--paid\" id=\"paid\" name=\"paidorreject\" value=\"true\" checked>\n          <label class=\"switch-status switch-status__paid--color\" for=\"paid\">Оплатить все</label><br>\n          <input type=\"radio\" class=\"switch-status--reject\" id=\"reject\" name=\"paidorreject\" value=\"false\">\n          <label class=\"switch-status switch-status__reject--color\" for=\"reject\">Отменить все</label>\n          <div class=\"switch-status__slider\"></div> \n        </div>`;\n         row.push(`${multipleSwitch} <hr>`);    \n      }\n\n      this.selected = [];\n      return `${row.join(\"\")}`\n    },\n    checkRadio(){\n      let check = [];\n      let temp = check.push([...document.querySelectorAll('.changeStage input[type=\"radio\"]')]);\n      let result = check[0].find(el=> el.checked === true);\n      return result.value;\n    },\n    copyToBuff(el){\n      this.copyDone = false\n      navigator.clipboard.writeText(`${el}`).then(() =>{\n      this.copyDone = true;\n      })\n    },\n    sortedPeriod(dataNum){\n       this.numData = dataNum;\n    },\n    sortTest(a,b,isAsc){\n      console.log(a,b,isAsc);\n      let num = this.numData;\n      if(isAsc === false){\n        if(num !== null && num !==undefined){\n            this.numisAsc = isAsc;\n            return b.reward[num].reward - a.reward[num].reward;\n        } \n      }else if(isAsc === true){\n        if(num !== null && num !==undefined){\n            this.numisAsc = isAsc;\n            return a.reward[num].reward - b.reward[num].reward;\n        } \n      }\n    \n    },\n    numDataClear(a){\n      a ===  'totel' || a === 'id' || a === 'alias' ? this.numData = null : null;\n    },\n    checkifFiltred(period){\n      let checking = this.toCalculatedDate.find(el=> el.end === period.end && el.start === period.start);\n      if(checking !== undefined){\n        return true;\n      } else {\n        return false;\n      }\n    },\n    getFullPeriods(){ \n      if(this.periods !== []){\n        this.checkedPeriods = [];\n        this.checkedPeriods[0]= new Date (new Date(this.periods[0].start).setHours(0));\n        this.checkedPeriods[1] = new Date();\n      }\n    }\n}, \n  computed: {\n    totalPoolReward() {\n      let totalAm = 0;\n      \n      if(this.snapshot !== null){\n      this.snapshot.forEach((el) => {\n        if (el.totalPoolReward !== 0) {\n          for (let i = 0; i < Object.keys(el.rewardedPeriod).length; i++) {\n            totalAm =\n              totalAm +\n              el.rewardedPeriod[Object.keys(el.rewardedPeriod)[i]].rewardAmount;\n          }\n        }\n      });\n      }\n      return totalAm.toFixed(8);\n    },\n    toCalculatedDate(){\n      let inputedCheckedPeriodsForCalculating = [];\n      let filtredPeriods = [];\n\n      if(this.checkedPeriods !== []){\n\n      let data = this.checkedPeriods;\n\n      if(data[1] === undefined) {\n        let tempVal = data;\n        data = [];\n        data[0] = tempVal;\n        data[1] = tempVal;\n      } \n\n      data.map(el => {\n        let tempDate = new Date(Date.parse(el));\n        let tempYear = tempDate.getFullYear();\n        let tempMonth = tempDate.getMonth();\n        let tempDay = tempDate.getDate();\n        let timezone = tempDate.getTimezoneOffset()/60;\n        let tempHour = 9 - timezone;\n        console.log(tempHour);\n\n        const newDate = new Date (tempYear, tempMonth, tempDay, tempHour, 0, 0, 0);\n        inputedCheckedPeriodsForCalculating.push(newDate.getTime());\n      });\n\n      console.log(inputedCheckedPeriodsForCalculating);\n\n      let checkedStartPeriod = this.periods.find(el=> el.start <= inputedCheckedPeriodsForCalculating[0] && inputedCheckedPeriodsForCalculating[0] <= el.end);\n\n\n\n      let checkedEndPeriod = this.periods.slice().reverse().find(el=> el.start <=  inputedCheckedPeriodsForCalculating[1] && inputedCheckedPeriodsForCalculating[1] <= el.end);\n\n      let startIndex = this.periods.indexOf(checkedStartPeriod);\n      let endIndex = this.periods.indexOf(checkedEndPeriod)+1;\n      console.log('index', startIndex, endIndex)\n      \n      \n      if(startIndex !== endIndex){\n        filtredPeriods = this.periods.slice(startIndex, endIndex);\n      } else if(startIndex !== -1){\n        filtredPeriods.push(this.periods[startIndex]);\n      }\n      \n      }\n\n      return filtredPeriods;\n    }\n    /*\n    cleanReward() {\n      let result = 0;\n      this.periods.forEach((el) => {\n        el.poolReward !== undefined && el.poolReward >= 0\n          ? (result = result + el.poolReward)\n          : null;\n      });\n      return (result - this.totalPoolReward).toFixed(8);\n    },*/\n  },\n  created() {\n    this.loader = this.$buefy.loading.open({container: null});\n    if (!firebase.apps.length) {\n      this.firebaseConfig = this.$store.getters.getfirebaseConfig;\n      firebase.initializeApp(this.firebaseConfig);\n    }\n    \n\n    let database = firebase.database();\n    let poolClients = database.ref(\"/firstline\");\n    let poolPeriods = database.ref(\"/periods\");\n    let poolSnapshots = database.ref(\"/pool\");\n    let poolCurrentPeriod = database.ref(\"/currentPeriod\");\n\n\n    poolCurrentPeriod.once('value').then( snap =>{\n      let tempSnap = snap.val();\n      this.miningPoolFullIncome = tempSnap[Object.keys(tempSnap)[0]].miningPoolFullReward;\n      this.miningPoolAlias = tempSnap[Object.keys(tempSnap)[0]].assetboxData.alias;\n    });\n\n    poolClients.once(\"value\").then((snapshot) => {\n      let tempSnap = snapshot.val();\n      let tempSnapAssetboxesData = [];\n      let tempClientsList = [];\n\n      if (tempSnap !== 0) {\n        for (let i = 0; i < Object.keys(tempSnap).length; i++) {\n          tempSnapAssetboxesData.push(tempSnap[Object.keys(tempSnap)[i]]);\n        }\n        tempSnapAssetboxesData.forEach((el) => {\n          tempClientsList.push({ adress: el.adress, alias: el.alias });\n        });\n      }\n\n      this.firstlineAssets = tempClientsList;\n      this.snapshot = tempSnapAssetboxesData;\n\n      poolPeriods\n        .once(\"value\")\n        .then((snap) => {\n          let tempPeriodsforRendiring = [];\n          let tempSnap = snap.val();\n\n          if (tempSnap !== 0) {\n            for (let i = 0; i < Object.keys(tempSnap).length; i++) {\n              tempPeriodsforRendiring.push(tempSnap[Object.keys(tempSnap)[i]]);\n            }\n          }\n\n          tempPeriodsforRendiring.forEach((element) => {\n            let tempReward = 0;\n            if (element.rewardData !== 0 && element.rewardData !== undefined) {\n              element.rewardData.totalReward !== undefined\n                ? (tempReward = element.rewardData.totalReward)\n                : null;\n            }\n\n            this.periods.push({\n              start: element.start,\n              end: element.end,\n              poolReward: tempReward,\n            });\n          });\n        })\n        .then(() => {\n          poolSnapshots.once(\"value\").then((res) => {\n            let tempRes = res.val();\n            Object.keys(tempRes).length - 1 >= 0\n              ? (this.time =\n                  tempRes[\n                    Object.keys(tempRes)[Object.keys(tempRes).length - 1]\n                  ].time)\n              : (this.time = 0);\n          });\n        });\n    });\n\n    poolClients.once(\"value\").then((snapshot) => {\n      let tempSnap = snapshot.val();\n      let tempSnapAssetboxesData = [];\n      let tempClientsList = [];\n\n      if (tempSnap !== 0) {\n        for (let i = 0; i < Object.keys(tempSnap).length; i++) {\n          tempSnapAssetboxesData.push(tempSnap[Object.keys(tempSnap)[i]]);\n        }\n        tempSnapAssetboxesData.forEach((el) => {\n          tempClientsList.push({ adress: el.adress, alias: el.alias });\n        });\n      }\n\n      this.firstlineAssets = tempClientsList;\n      this.snapshot = tempSnapAssetboxesData;\n\n      //new\n      poolSnapshots\n        .once(\"value\")\n        .then((res) => {\n          let tempRes = res.val();\n          // console.log(Object.keys(tempRes));\n          Object.keys(tempRes).length - 1 >= 0\n            ? (this.time =\n                tempRes[\n                  Object.keys(tempRes)[Object.keys(tempRes).length - 1]\n                ].time)\n            : (this.time = 0);\n        })\n        .then(() => {\n          tempClientsList.forEach((el, index) => {\n            let rewforPeriods = [];\n\n            poolPeriods.once(\"value\").then((snap) => {\n              let tempPeriodsforRendiring = [];\n              let tempSnap = snap.val();\n\n              if (tempSnap !== 0) {\n                for (let i = 0; i < Object.keys(tempSnap).length; i++) {\n                  tempPeriodsforRendiring.push(\n                    tempSnap[Object.keys(tempSnap)[i]]\n                  );\n                }\n              }\n\n              tempPeriodsforRendiring.forEach((period, index) => {\n                let startofPeriod = period.start;\n                let endofPeriod = period.end;\n\n                let checked = this.snapshot.find(\n                  (element) => element.adress == el.adress\n                );\n\n                if (this.time > period.end) {\n                  if (checked !== undefined) {\n                    if (\n                      checked.rewardedPeriod !== undefined &&\n                      checked.rewardedPeriod !== 0\n                    ) {\n                      for (\n                        let i = 0;\n                        i <= Object.keys(checked.rewardedPeriod).length - 1;\n                        i++\n                      ) {\n                        let checkedEl =\n                          checked.rewardedPeriod[\n                            Object.keys(checked.rewardedPeriod)[i]\n                          ];\n\n                        if (\n                          checkedEl.start === startofPeriod &&\n                          checkedEl.end === endofPeriod\n                        ) {\n                          rewforPeriods.push({\n                            i: index,\n                            reward: checkedEl.rewardAmount,\n                            periodStart: startofPeriod,\n                          });\n                          return;\n                        } else if (\n                          i ==\n                          Object.keys(checked.rewardedPeriod).length - 1\n                        ) {\n                          rewforPeriods.push({\n                            i: index,\n                            reward: 0,\n                            periodStart: startofPeriod,\n                          });\n                          return;\n                        }\n                      }\n                    } else {\n                      rewforPeriods.push({\n                        i: index,\n                        reward: 0,\n                        periodStart: startofPeriod,\n                      });\n                    }\n                  } else {\n                    rewforPeriods.push({\n                      i: index,\n                      reward: 0,\n                      periodStart: startofPeriod,\n                    });\n                  }\n                } else {\n                  rewforPeriods.push({\n                    i: index,\n                    reward: \"-\",\n                    periodStart: startofPeriod,\n                  });\n                }\n              });\n              this.data.unshift({\n                id: index,\n                alias: el.alias,\n                asset: el.adress,\n                reward: rewforPeriods,\n                totel: 0,\n              });\n            });\n          });\n        }).then(_=>{\n          setTimeout(() => this.loader.close(),1000);\n        })\n    });\n    \n    let tempPrevMonth;\n    const tempDataforFilter = new Date();\n    const defaultFilterEnd = new Date(tempDataforFilter);\n\n    tempDataforFilter.getMonth() == 0 ? tempPrevMonth = 11 : tempPrevMonth = tempDataforFilter.getMonth() - 1;\n   \n    const defaultFilterStart = new Date( tempDataforFilter.setMonth(tempPrevMonth));\n    this.checkedPeriods[0]=defaultFilterStart;\n    this.checkedPeriods[1]=defaultFilterEnd;\n    /*\n      poolPeriods.once(\"value\").then((snap) => {\n        let tempPeriodsforRendiring = [];\n        let tempSnap = snap.val();\n\n        if (tempSnap !== 0) {\n          for (let i = 0; i < Object.keys(tempSnap).length; i++) {\n            tempPeriodsforRendiring.push(tempSnap[Object.keys(tempSnap)[i]]);\n          }\n        }\n\n        tempPeriodsforRendiring.forEach((element) => {\n          let tempReward = 0;\n          if (element.rewardData !== 0 && element.rewardData !== undefined) {\n            element.rewardData.totalReward !== undefined\n              ? (tempReward = element.rewardData.totalReward)\n              : null;\n          }\n\n          this.periods.push({\n            start: element.start,\n            end: element.end,\n            poolReward: tempReward,\n          });\n        });\n      }).then(()=>{\n        poolSnapshots.once('value').then(res => {\n          let tempRes = res.val();\n          console.log(Object.keys(tempRes));\n            Object.keys(tempRes).length-1 >= 0\n            ? this.time = tempRes[Object.keys(tempRes)[Object.keys(tempRes).length-1]].time\n            : this.time = 0;\n        })\n      })\n    });*/\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.dashboard__row:hover {\n  background-color: lightgoldenrodyellow !important;\n}\n.dashboard__alias {\n  min-width: 130px;\n  position: relative;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.dashboard__asset {\n  color: #7b84db;\n  position: relative;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  margin-left: 20px;\n  max-width: 450px;\n}\n\n.dashboard__total {\n  min-width: 120px;\n  position: relative;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n}\n\n.dashboard__asset:hover::after,\n.dashboard__alias:hover::after,\n.dashboard__total:hover::after {\n  content: \"Cкопировать\";\n  display: flex;\n  position: absolute;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-radius: 5px;\n  background: linear-gradient(90deg, #565dd6 0, #8147c1);\n  color: white;\n}\n\n.input__search {\n  min-width: 200px;\n}\n.dashboard__alias,\n.dashboard__asset {\n  text-align: start;\n}\n.table__container {\n  margin: 40px 70px;\n  overflow-x: scroll;\n  padding-bottom: 100px;\n}\n\n.period__nonpaid {\n  background-color: #f2f2f2;\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 5px;\n  border: 3px solid transparent;\n}\n.period__paid {\n  background-color: #48c774;\n  color: white;\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 5px;\n  border: 3px solid transparent;\n}\n\n.selected {\n  border: 3px solid #038c8c;\n}\n\ntd {\n  vertical-align: middle !important;\n  //-webkit-user-select: none;\n  //-khtml-user-select: none;\n  //-moz-user-select: none;\n  //-ms-user-select: none;\n  //user-select: none;\n}\n\n.selected--none {\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n.check:focus {\n  outline: none !important;\n  border: none !important;\n}\n\n.table__container::-webkit-scrollbar-track {\n  border-radius: 4px;\n}\n.table__container::-webkit-scrollbar {\n  width: 6px;\n}\n.table__container::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background: #f0f2f5;\n}\n.table__container:hover::-webkit-scrollbar-thumb {\n  background-image: linear-gradient(90deg, #565dd6 0, #8147c1);\n}\n\n.modal-card-body::-webkit-scrollbar-track {\n  border-radius: 4px;\n}\n.modal-card-body::-webkit-scrollbar {\n  width: 6px;\n}\n.modal-card-body::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background: #f0f2f5;\n}\n.modal-card-body:hover::-webkit-scrollbar-thumb {\n  background-image: linear-gradient(180deg, #565dd6 0, #8147c1);\n}\n\n.modal-card {\n  font-family: \"Montserrat Alternates\", sans-serif !important;\n  max-width: 640px !important;\n}\n\n.modal-card-title {\n  font-size: 18px;\n}\n\n.changeStage {\n  display: flex;\n  border: 2px solid whitesmoke;\n  border-radius: 50px;\n}\n\n.changeStage {\n  position: relative;\n}\n\n.switch-status {\n  width: 50%;\n  height: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n  cursor: pointer;\n}\n\n.switch-status__paid--color {\n  transition: color 1s ease-in;\n}\n\n.switch-status__reject--color {\n  transition: color 1s ease-in;\n}\n\n.switch-status--paid:checked ~ .switch-status__paid--color {\n  color: white;\n  transition: color 0.3s ease-in;\n}\n\n.switch-status--reject:checked ~ .switch-status__reject--color {\n  color: white;\n  transition: color 0.3s ease-in;\n}\n\n.switch-status--reject:checked ~ .switch-status__slider {\n  transform: translateX(100%);\n  transition: transform 0.5s ease-in;\n}\n\n.switch-status__slider {\n  height: 100%;\n  width: 50%;\n  border-radius: 15px;\n  background: linear-gradient(315deg, #20bf55 0%, #01baef 74%);\n  position: absolute;\n  z-index: 0;\n  transition: transform 0.5s ease-in;\n}\n.switch-status__slider::before {\n  content: \"\";\n  background: linear-gradient(90deg, #ff8a00, #e52e71);\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n  transition: opacity 0.5s ease-out;\n  opacity: 0;\n  border-radius: 15px;\n}\n\n.switch-status--reject:checked ~ .switch-status__slider::before {\n  z-index: 2;\n  opacity: 1;\n  transition: opacity 0.5s ease-out;\n}\n\n.confirm__period-total {\n  font-weight: 600;\n  margin-top: 15px;\n  margin-bottom: 5px;\n  display: flex;\n  justify-content: space-between;\n}\n.confirm__period {\n  margin-top: 5px;\n  margin-bottom: 5px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.confirm__asset {\n  margin-top: 15px;\n  margin-bottom: 25px;\n  font-weight: 600;\n  color: #7b84db;\n}\n\n.modal-card-foot .button {\n  font-family: \"Montserrat Alternates\", sans-serif !important;\n}\n\n.modal-card-foot {\n  justify-content: center !important;\n}\n\n#paid,\n#reject {\n  display: none;\n}\n\n.allert__mes {\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  z-index: 105;\n  opacity: 0.9;\n}\n\n.toast {\n  font-family: \"Montserrat Alternates\", sans-serif !important;\n  margin-top: 0px !important;\n}\n.notices {\n  padding-top: 20px;\n}\n\n.table:not(.is-bordered) tr:not(:last-child) .column--fixed {\n  border-width: 0 0 1.2px !important;\n}\n\n.table.is-striped tbody tr:not(.is-selected):nth-child(odd) .column--fixed {\n  background-color: white !important;\n}\n\n.table.is-striped\n  tbody\n  tr:not(.is-selected):hover:nth-child(odd)\n  .column--fixed {\n  background-color: lightgoldenrodyellow !important;\n}\n\n.column--fixed {\n  position: sticky;\n  left: 0;\n  background: inherit;\n  z-index: 100;\n  //box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n}\n\n.column--fixed::after,\nthead tr:nth-child(3) th:nth-child(2)::after,\nthead tr:nth-child(1) th:nth-child(2)::after,\n.is-subheading th:nth-child(2)::after {\n  content: \"\";\n  background: linear-gradient(\n    90deg,\n    rgba(255, 255, 255, 1),\n    rgba(255, 255, 255, 0)\n  );\n  position: absolute;\n  top: 0;\n  right: -50px;\n  bottom: 0;\n  left: 100%;\n  z-index: 100;\n  pointer-events: none;\n}\n\n.table.is-striped\n  tbody\n  tr:not(.is-selected):nth-child(even)\n  .column--fixed::after {\n  background: linear-gradient(\n    90deg,\n    #fafafa,\n    rgba(255, 255, 255, 0)\n  ) !important;\n}\n\n.table.is-striped tbody tr:not(.is-selected):hover .column--fixed::after {\n  background: linear-gradient(\n    90deg,\n    lightgoldenrodyellow,\n    rgba(255, 255, 255, 0)\n  ) !important;\n}\n\nthead tr:nth-child(3) th:nth-child(2),\nthead tr:nth-child(1) th:nth-child(2),\n.is-subheading th:nth-child(2) {\n  position: sticky;\n  left: 0;\n  background-color: white;\n  z-index: 100;\n}\n\nthead tr:nth-child(3) th:nth-child(3),\nthead tr:nth-child(1) th:nth-child(3),\n.is-subheading th:nth-child(3) {\n  padding-left: 30px;\n}\n\n.dialog.modal.is-active {\n  z-index: 102 !important;\n}\n\n.control--border {\n  margin-left: 70px;\n  margin-top: 20px;\n}\n\n.container--conrolers {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.total__pool-reward {\n  margin-right: 70px;\n  margin-top: 20px;\n}\n\n.total__title {\n  font-family: \"Montserrat Alternates\", sans-serif !important;\n}\n.total__title--pool-reward {\n  font-weight: 600;\n  color: #7b84db;\n}\n\n.period__sorted--arrow::before {\n    content: \"\\F005D\";\n    display: inline-block;\n    font: normal normal normal 24px/1 \"Material Design Icons\";\n    font-size: inherit;\n    text-rendering: auto;\n    line-height: inherit;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\n.period__sorted--container{\n  display: flex;\n  max-width: 160px;\n}\n\n.period__sorted{\n  visibility: hidden;\n  margin-left: 0 !important;\n}\n\n.period__sorted--visible{\n  visibility: visible;\n}\n\n.table__container thead tr:nth-child(1) th.is-sortable:nth-child(n+3){\n  padding: 0 !important;\n}\n\n\n\n.table__container thead tr:nth-child(1) th.is-sortable:nth-child(n+3) .period__sorted--container{\n  padding: .5em 0 .5em .75em; \n  margin-left: 4px;\n}\n\n.table__container thead tr:nth-child(1) th.is-sortable:nth-last-child(1){\n  padding: 0.5em 0.75em !important; \n  margin-left: 0;\n}\n\n.filter__container{\n  width: 100%;\n  //z-index: 200;\n  display: flex;\n  margin-left: 70px;\n}\n\n.filter__container .dropdown-menu{\n  z-index: 200;\n  outline: none !important;\n}\n\n.filter__container .dropdown-item{\n  outline: none !important;\n}\n\n.filter__container .datepicker-cell{\n  outline: none !important;\n}\n\n.filter__conrols{\n  display: flex;\n  max-width: 350px;\n  margin-bottom: 0 !important;\n  margin-right: 10px;\n}\n\n.filter__conrols .b-radio.radio:not(.button){\n  margin-right: 40px !important;\n}\n\n.filter__datapicker{\n  margin-right: 40px;\n}\n\n.table__container thead tr:nth-child(1) th:nth-child(3),\n.table__container thead tr:nth-child(2) th:nth-child(3),\n.table__container thead tr:nth-child(3) th:nth-child(3){\n  width: 450px !important;\n  max-width: 450px !important;\n  flex-grow: 0 !important;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=7a06e0ae&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Dashboard.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var path = require('../internals/path');\nvar has = require('../internals/has');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND);\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPrimitive(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar IndexedObject = require('../internals/indexed-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\n\nvar nativeJoin = [].join;\n\nvar ES3_STRINGS = IndexedObject != Object;\nvar STRICT_METHOD = arrayMethodIsStrict('join', ',');\n\n// `Array.prototype.join` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.join\n$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {\n  join: function join(separator) {\n    return nativeJoin.call(toIndexedObject(this), separator === undefined ? ',' : separator);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toInteger = require('../internals/to-integer');\nvar toLength = require('../internals/to-length');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('splice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = toLength(O.length);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar getBuiltIn = require('../internals/get-built-in');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\nvar fails = require('../internals/fails');\nvar has = require('../internals/has');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/define-well-known-symbol');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\nvar WellKnownSymbolsStore = shared('wks');\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar isSymbol = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return Object(it) instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPrimitive(P, true);\n  anObject(Attributes);\n  if (has(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPrimitive(V, true);\n  var enumerable = nativePropertyIsEnumerable.call(this, P);\n  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPrimitive(P, true);\n  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {\n      result.push(AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.github.io/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  redefine($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Symbol.for` method\n  // https://tc39.github.io/ecma262/#sec-symbol.for\n  'for': function (key) {\n    var string = String(key);\n    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = $Symbol(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  },\n  // `Symbol.keyFor` method\n  // https://tc39.github.io/ecma262/#sec-symbol.keyfor\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');\n    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  },\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.github.io/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.github.io/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\n$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return getOwnPropertySymbolsModule.f(toObject(it));\n  }\n});\n\n// `JSON.stringify` method behavior with symbols\n// https://tc39.github.io/ecma262/#sec-json.stringify\nif ($stringify) {\n  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {\n    var symbol = $Symbol();\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) != '[null]'\n      // WebKit converts symbol values to JSON as null\n      || $stringify({ a: symbol }) != '{}'\n      // V8 throws on boxed symbols\n      || $stringify(Object(symbol)) != '{}';\n  });\n\n  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {\n    // eslint-disable-next-line no-unused-vars\n    stringify: function stringify(it, replacer, space) {\n      var args = [it];\n      var index = 1;\n      var $replacer;\n      while (arguments.length > index) args.push(arguments[index++]);\n      $replacer = replacer;\n      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n      if (!isArray(replacer)) replacer = function (key, value) {\n        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n        if (!isSymbol(value)) return value;\n      };\n      args[1] = replacer;\n      return $stringify.apply(null, args);\n    }\n  });\n}\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive\nif (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {\n  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n}\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","var $ = require('../internals/export');\nvar from = require('../internals/array-from');\nvar checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.github.io/ecma262/#sec-array.from\n$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","var $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar nativeKeys = require('../internals/object-keys');\nvar fails = require('../internals/fails');\n\nvar FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.github.io/ecma262/#sec-object.keys\n$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject(it));\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar toInteger = require('../internals/to-integer');\nvar thisNumberValue = require('../internals/this-number-value');\nvar repeat = require('../internals/string-repeat');\nvar fails = require('../internals/fails');\n\nvar nativeToFixed = 1.0.toFixed;\nvar floor = Math.floor;\n\nvar pow = function (x, n, acc) {\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\n};\n\nvar log = function (x) {\n  var n = 0;\n  var x2 = x;\n  while (x2 >= 4096) {\n    n += 12;\n    x2 /= 4096;\n  }\n  while (x2 >= 2) {\n    n += 1;\n    x2 /= 2;\n  } return n;\n};\n\nvar FORCED = nativeToFixed && (\n  0.00008.toFixed(3) !== '0.000' ||\n  0.9.toFixed(0) !== '1' ||\n  1.255.toFixed(2) !== '1.25' ||\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\n) || !fails(function () {\n  // V8 ~ Android 4.3-\n  nativeToFixed.call({});\n});\n\n// `Number.prototype.toFixed` method\n// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed\n$({ target: 'Number', proto: true, forced: FORCED }, {\n  // eslint-disable-next-line max-statements\n  toFixed: function toFixed(fractionDigits) {\n    var number = thisNumberValue(this);\n    var fractDigits = toInteger(fractionDigits);\n    var data = [0, 0, 0, 0, 0, 0];\n    var sign = '';\n    var result = '0';\n    var e, z, j, k;\n\n    var multiply = function (n, c) {\n      var index = -1;\n      var c2 = c;\n      while (++index < 6) {\n        c2 += n * data[index];\n        data[index] = c2 % 1e7;\n        c2 = floor(c2 / 1e7);\n      }\n    };\n\n    var divide = function (n) {\n      var index = 6;\n      var c = 0;\n      while (--index >= 0) {\n        c += data[index];\n        data[index] = floor(c / n);\n        c = (c % n) * 1e7;\n      }\n    };\n\n    var dataToString = function () {\n      var index = 6;\n      var s = '';\n      while (--index >= 0) {\n        if (s !== '' || index === 0 || data[index] !== 0) {\n          var t = String(data[index]);\n          s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;\n        }\n      } return s;\n    };\n\n    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');\n    // eslint-disable-next-line no-self-compare\n    if (number != number) return 'NaN';\n    if (number <= -1e21 || number >= 1e21) return String(number);\n    if (number < 0) {\n      sign = '-';\n      number = -number;\n    }\n    if (number > 1e-21) {\n      e = log(number * pow(2, 69, 1)) - 69;\n      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);\n      z *= 0x10000000000000;\n      e = 52 - e;\n      if (e > 0) {\n        multiply(0, z);\n        j = fractDigits;\n        while (j >= 7) {\n          multiply(1e7, 0);\n          j -= 7;\n        }\n        multiply(pow(10, j, 1), 0);\n        j = e - 1;\n        while (j >= 23) {\n          divide(1 << 23);\n          j -= 23;\n        }\n        divide(1 << j);\n        multiply(1, 1);\n        divide(2);\n        result = dataToString();\n      } else {\n        multiply(0, z);\n        multiply(1 << -e, 0);\n        result = dataToString() + repeat.call('0', fractDigits);\n      }\n    }\n    if (fractDigits > 0) {\n      k = result.length;\n      result = sign + (k <= fractDigits\n        ? '0.' + repeat.call('0', fractDigits - k) + result\n        : result.slice(0, k - fractDigits) + '.' + result.slice(k - fractDigits));\n    } else {\n      result = sign + result;\n    } return result;\n  }\n});\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=style&index=0&lang=scss&\"","'use strict';\nvar $ = require('../internals/export');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar nativeIndexOf = [].indexOf;\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('indexOf');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.indexOf` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var defineWellKnownSymbol = require('../internals/define-well-known-symbol');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.github.io/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","var global = require('../internals/global');\nvar DOMIterables = require('../internals/dom-iterables');\nvar ArrayIteratorMethods = require('../modules/es.array.iterator');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar ArrayValues = ArrayIteratorMethods.values;\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype) {\n    // some Chrome versions have non-configurable methods on DOMTokenList\n    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {\n      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n    } catch (error) {\n      CollectionPrototype[ITERATOR] = ArrayValues;\n    }\n    if (!CollectionPrototype[TO_STRING_TAG]) {\n      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n    }\n    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {\n      // some Chrome versions have non-configurable methods on DOMTokenList\n      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {\n        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n      } catch (error) {\n        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n      }\n    }\n  }\n}\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// `Symbol.prototype.description` getter\n// https://tc39.github.io/ecma262/#sec-symbol.prototype.description\n'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar has = require('../internals/has');\nvar isObject = require('../internals/is-object');\nvar defineProperty = require('../internals/object-define-property').f;\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\n\nvar NativeSymbol = global.Symbol;\n\nif (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||\n  // Safari 12 bug\n  NativeSymbol().description !== undefined\n)) {\n  var EmptyStringDescriptionStore = {};\n  // wrap Symbol constructor for correct work with undefined description\n  var SymbolWrapper = function Symbol() {\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);\n    var result = this instanceof SymbolWrapper\n      ? new NativeSymbol(description)\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\n    if (description === '') EmptyStringDescriptionStore[result] = true;\n    return result;\n  };\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\n  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;\n  symbolPrototype.constructor = SymbolWrapper;\n\n  var symbolToString = symbolPrototype.toString;\n  var native = String(NativeSymbol('test')) == 'Symbol(test)';\n  var regexp = /^Symbol\\((.*)\\)[^)]+$/;\n  defineProperty(symbolPrototype, 'description', {\n    configurable: true,\n    get: function description() {\n      var symbol = isObject(this) ? this.valueOf() : this;\n      var string = symbolToString.call(symbol);\n      if (has(EmptyStringDescriptionStore, symbol)) return '';\n      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');\n      return desc === '' ? undefined : desc;\n    }\n  });\n\n  $({ global: true, forced: true }, {\n    Symbol: SymbolWrapper\n  });\n}\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","'use strict';\nvar $ = require('../internals/export');\nvar isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toLength = require('../internals/to-length');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('slice', { ACCESSORS: true, 0: 0, 1: 2 });\n\nvar SPECIES = wellKnownSymbol('species');\nvar nativeSlice = [].slice;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = toLength(O.length);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === Array || Constructor === undefined) {\n        return nativeSlice.call(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n","// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n"],"sourceRoot":""}